ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_crc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CRC_Handle_8,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	CRC_Handle_8:
  23              	.LFB44:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @file    stm32f0xx_hal_crc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief   CRC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *          functionalities of the Cyclic Redundancy Check (CRC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *           + Peripheral State functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   @verbatim
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****                      ##### How to use this driver #####
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     [..]
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****          (+) Enable CRC AHB clock using __HAL_RCC_CRC_CLK_ENABLE();
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****          (+) Initialize CRC calculator
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              (++)specify generating polynomial (IP default or non-default one)
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              (++)specify initialization value (IP default or non-default one)
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              (++)specify input data format
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              (++)specify input or output data inversion mode if any
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****          (+) Use HAL_CRC_Accumulate() function to compute the CRC value of the 
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              input data buffer starting with the previously computed CRC as 
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              initialization value
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****          (+) Use HAL_CRC_Calculate() function to compute the CRC value of the 
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              input data buffer starting with the defined initialization value 
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****              (default or non-default) to initiate CRC calculation
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   @endverbatim
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   ******************************************************************************
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @attention
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * are permitted provided that the following conditions are met:
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *      this list of conditions and the following disclaimer.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *      this list of conditions and the following disclaimer in the documentation
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *      and/or other materials provided with the distribution.
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *      may be used to endorse or promote products derived from this software
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *      without specific prior written permission.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   ******************************************************************************
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Includes ------------------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** #include "stm32f0xx_hal.h"
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC CRC
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief CRC HAL module driver.
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** #ifdef HAL_CRC_MODULE_ENABLED
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Private typedef -----------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Private define ------------------------------------------------------------*/
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Private macro -------------------------------------------------------------*/
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Private variables ---------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Private function prototypes -----------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC_Private_Functions CRC Private Functions
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** static uint32_t CRC_Handle_8(CRC_HandleTypeDef *hcrc, uint8_t pBuffer[], uint32_t BufferLength);
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** static uint32_t CRC_Handle_16(CRC_HandleTypeDef *hcrc, uint16_t pBuffer[], uint32_t BufferLength);
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @}
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /* Exported functions --------------------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions CRC Exported Functions
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions_Group1 Initialization/de-initialization functions
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  *  @brief    Initialization and Configuration functions. 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  *
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** @verbatim    
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****             ##### Initialization and de-initialization functions #####
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     [..]  This section provides functions allowing to:
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       (+) Initialize the CRC according to the specified parameters 
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****           in the CRC_InitTypeDef and create the associated handle
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       (+) DeInitialize the CRC peripheral
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       (+) Initialize the CRC MSP (MCU Specific Package)
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       (+) DeInitialize the CRC MSP
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** @endverbatim
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Initialize the CRC according to the specified
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         parameters in the CRC_InitTypeDef and initialize the associated handle.
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval HAL status
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the CRC handle allocation */
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if(hcrc == NULL)
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     return HAL_ERROR;
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the parameters */
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if(hcrc->State == HAL_CRC_STATE_RESET)
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {   
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     /* Allocate lock resource and initialize it */
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     hcrc->Lock = HAL_UNLOCKED;
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     /* Init the low level hardware */
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     HAL_CRC_MspInit(hcrc);
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY; 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Extended initialization: if programmable polynomial feature is 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      applicable to device, set default or non-default generating 
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      polynomial according to hcrc->Init parameters.
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      If feature is non-applicable to device in use, HAL_CRCEx_Init straight 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      away reports HAL_OK. */
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if (HAL_CRCEx_Init(hcrc) != HAL_OK)
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     return HAL_ERROR;
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* check whether or not non-default CRC initial value has been 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    * picked up by user */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);  
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   else
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* set input data inversion mode */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode)); 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode); 
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* set output data inversion mode */
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode)); 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);  
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* makes sure the input data format (bytes, halfwords or words stream)
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    * is properly specified by user */
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_READY;
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return function status */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return HAL_OK;
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  DeInitialize the CRC peripheral. 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval HAL status
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** HAL_StatusTypeDef HAL_CRC_DeInit(CRC_HandleTypeDef *hcrc)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** { 
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the CRC handle allocation */
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if(hcrc == NULL)
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     return HAL_ERROR;
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the parameters */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the CRC peripheral state */
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if(hcrc->State == HAL_CRC_STATE_BUSY)
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     return HAL_BUSY;
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Reset CRC calculation unit */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_CRC_DR_RESET(hcrc);
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Reset IDR register content */
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   CLEAR_BIT(hcrc->Instance->IDR, CRC_IDR_IDR) ;
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* DeInit the low level hardware */
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   HAL_CRC_MspDeInit(hcrc);
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_RESET;
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Process unlocked */
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_UNLOCK(hcrc);
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return function status */
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return HAL_OK;
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Initializes the CRC MSP.
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval None
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** __weak void HAL_CRC_MspInit(CRC_HandleTypeDef *hcrc)
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Prevent unused argument(s) compilation warning */
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   UNUSED(hcrc);
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****             the HAL_CRC_MspInit can be implemented in the user file
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  DeInitialize the CRC MSP.
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval None
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** __weak void HAL_CRC_MspDeInit(CRC_HandleTypeDef *hcrc)
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Prevent unused argument(s) compilation warning */
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   UNUSED(hcrc);
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****             the HAL_CRC_MspDeInit can be implemented in the user file
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    */
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @}
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions_Group2 Peripheral Control functions 
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  *  @brief    management functions. 
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  *
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** @verbatim   
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****                       ##### Peripheral Control functions #####
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================  
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     [..]  This section provides functions allowing to:
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       (+) compute the 7U, 8U, 16 or 32-bit CRC value of an 8U, 16 or 32-bit data buffer
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****           using the combination of the previous CRC value and the new one
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****           
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        [..]  or
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****           
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       (+) compute the 7U, 8U, 16 or 32-bit CRC value of an 8U, 16 or 32-bit data buffer
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****           independently of the previous CRC value.
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** @endverbatim
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**                  
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Compute the 7, 8, 16 or 32-bit CRC value of an 8, 16 or 32-bit data buffer
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         starting with the previously computed CRC as initialization value.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  pBuffer pointer to the input data buffer, exact input data format is
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         provided by hcrc->InputDataFormat.  
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  BufferLength input data buffer length (number of bytes if pBuffer
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         type is * uint8_t, number of half-words if pBuffer type is * uint16_t,
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         number of words if pBuffer type is * uint32_t).
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @note  By default, the API expects a uint32_t pointer as input buffer parameter.
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *        Input buffer pointers with other types simply need to be cast in uint32_t
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *        and the API will internally adjust its input data processing based on the
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *        handle field hcrc->InputDataFormat.
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** uint32_t HAL_CRC_Accumulate(CRC_HandleTypeDef *hcrc, uint32_t pBuffer[], uint32_t BufferLength)
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t index = 0U; /* CRC input data buffer index */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t temp = 0U;  /* CRC output (read from hcrc->Instance->DR register) */
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Process locked */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_LOCK(hcrc); 
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */  
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   switch (hcrc->InputDataFormat)
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     case CRC_INPUTDATA_FORMAT_WORDS:  
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       /* Enter Data to the CRC calculator */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       for(index = 0U; index < BufferLength; index++)
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****         hcrc->Instance->DR = pBuffer[index];
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       }
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       temp = hcrc->Instance->DR;
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     case CRC_INPUTDATA_FORMAT_BYTES: 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       temp = CRC_Handle_8(hcrc, (uint8_t*)pBuffer, BufferLength);
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     case CRC_INPUTDATA_FORMAT_HALFWORDS: 
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       temp = CRC_Handle_16(hcrc, (uint16_t*)pBuffer, BufferLength);
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     default:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;          
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */    
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_READY; 
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Process unlocked */
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_UNLOCK(hcrc);
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return the CRC computed value */ 
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return temp;
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**                  
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Compute the 7, 8, 16 or 32-bit CRC value of an 8, 16 or 32-bit data buffer
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         starting with hcrc->Instance->INIT as initialization value.
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  pBuffer pointer to the input data buffer, exact input data format is
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         provided by hcrc->InputDataFormat.  
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  BufferLength input data buffer length (number of bytes if pBuffer
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         type is * uint8_t, number of half-words if pBuffer type is * uint16_t,
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         number of words if pBuffer type is * uint32_t).
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @note  By default, the API expects a uint32_t pointer as input buffer parameter.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *        Input buffer pointers with other types simply need to be cast in uint32_t
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *        and the API will internally adjust its input data processing based on the
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *        handle field hcrc->InputDataFormat. 
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */  
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** uint32_t HAL_CRC_Calculate(CRC_HandleTypeDef *hcrc, uint32_t pBuffer[], uint32_t BufferLength)
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t index = 0U; /* CRC input data buffer index */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t temp = 0U;  /* CRC output (read from hcrc->Instance->DR register) */
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Process locked */
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_LOCK(hcrc); 
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */  
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Reset CRC Calculation Unit (hcrc->Instance->INIT is 
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *  written in hcrc->Instance->DR) */
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_CRC_DR_RESET(hcrc);
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   switch (hcrc->InputDataFormat)
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     case CRC_INPUTDATA_FORMAT_WORDS:  
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       /* Enter 32-bit input data to the CRC calculator */
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       for(index = 0U; index < BufferLength; index++)
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****         hcrc->Instance->DR = pBuffer[index];
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       }
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       temp = hcrc->Instance->DR;
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     case CRC_INPUTDATA_FORMAT_BYTES: 
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       /* Specific 8-bit input data handling  */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       temp = CRC_Handle_8(hcrc, (uint8_t*)pBuffer, BufferLength);
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     case CRC_INPUTDATA_FORMAT_HALFWORDS: 
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       /* Specific 16-bit input data handling  */
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       temp = CRC_Handle_16(hcrc, (uint16_t*)pBuffer, BufferLength);
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     default:
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;         
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Change CRC peripheral state */    
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_READY; 
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Process unlocked */
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   __HAL_UNLOCK(hcrc);
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return the CRC computed value */ 
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return temp;
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @}
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions_Group3 Peripheral State functions 
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  *  @brief    Peripheral State functions. 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  *
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** @verbatim   
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****                       ##### Peripheral State functions #####
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****  ===============================================================================  
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     [..]
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     This subsection permits to get in run-time the status of the peripheral.
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** @endverbatim
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Return the CRC handle state.
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval HAL state
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** HAL_CRC_StateTypeDef HAL_CRC_GetState(CRC_HandleTypeDef *hcrc)
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return CRC handle state */
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return hcrc->State;
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @}
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @}
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /** @defgroup CRC_Private_Functions CRC Private Functions
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @{
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**             
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Enter 8-bit input data to the CRC calculator.
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         Specific data handling to optimize processing time.  
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  pBuffer pointer to the input data buffer
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  BufferLength input data buffer length
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** static uint32_t CRC_Handle_8(CRC_HandleTypeDef *hcrc, uint8_t pBuffer[], uint32_t BufferLength)
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
  25              		.loc 1 456 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t i = 0U; /* input data buffer index */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    /* Processing time optimization: 4 bytes are entered in a row with a single word write,
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     * last bytes must be carefully fed to the CRC calculator to ensure a correct type
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     * handling by the IP */
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    for(i = 0U; i < (BufferLength/4U); i++)
  38              		.loc 1 462 0
  39 0002 0025     		movs	r5, #0
  40 0004 0EE0     		b	.L2
  41              	.LVL2:
  42              	.L3:
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    {
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       hcrc->Instance->DR = ((uint32_t)pBuffer[4U*i]<<24U) | ((uint32_t)pBuffer[4U*i+1]<<16U) | ((ui
  43              		.loc 1 464 0 discriminator 3
  44 0006 AC00     		lsls	r4, r5, #2
  45 0008 0B5D     		ldrb	r3, [r1, r4]
  46 000a 1B06     		lsls	r3, r3, #24
  47 000c 0C19     		adds	r4, r1, r4
  48 000e 6678     		ldrb	r6, [r4, #1]
  49 0010 3604     		lsls	r6, r6, #16
  50 0012 3343     		orrs	r3, r6
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 10


  51 0014 A678     		ldrb	r6, [r4, #2]
  52 0016 3602     		lsls	r6, r6, #8
  53 0018 3343     		orrs	r3, r6
  54 001a E678     		ldrb	r6, [r4, #3]
  55 001c 0468     		ldr	r4, [r0]
  56 001e 3343     		orrs	r3, r6
  57 0020 2360     		str	r3, [r4]
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    {
  58              		.loc 1 462 0 discriminator 3
  59 0022 0135     		adds	r5, r5, #1
  60              	.LVL3:
  61              	.L2:
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    {
  62              		.loc 1 462 0 is_stmt 0 discriminator 1
  63 0024 9308     		lsrs	r3, r2, #2
  64 0026 AB42     		cmp	r3, r5
  65 0028 EDD8     		bhi	.L3
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    }
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    /* last bytes specific handling */
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    if ((BufferLength%4U) != 0U)
  66              		.loc 1 467 0 is_stmt 1
  67 002a 0323     		movs	r3, #3
  68 002c 1A40     		ands	r2, r3
  69              	.LVL4:
  70 002e 05D0     		beq	.L4
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    {
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      if  (BufferLength%4U == 1U)
  71              		.loc 1 469 0
  72 0030 012A     		cmp	r2, #1
  73 0032 06D0     		beq	.L7
  74              	.L5:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      {
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        *(uint8_t volatile*) (&hcrc->Instance->DR) = pBuffer[4*i];
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      }
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      if  (BufferLength%4U == 2U)
  75              		.loc 1 473 0
  76 0034 022A     		cmp	r2, #2
  77 0036 09D0     		beq	.L8
  78              	.L6:
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      {
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        *(uint16_t volatile*) (&hcrc->Instance->DR) = ((uint32_t)pBuffer[4*i]<<8) | (uint32_t)pBuffe
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      }
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      if  (BufferLength%4U == 3U)
  79              		.loc 1 477 0
  80 0038 032A     		cmp	r2, #3
  81 003a 10D0     		beq	.L9
  82              	.LVL5:
  83              	.L4:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      {
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        *(uint16_t volatile*) (&hcrc->Instance->DR) = ((uint32_t)pBuffer[4*i]<<8) | (uint32_t)pBuffe
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        *(uint8_t volatile*) (&hcrc->Instance->DR) = pBuffer[4*i+2];       
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      }
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    }
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return the CRC computed value */ 
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return hcrc->Instance->DR;
  84              		.loc 1 485 0
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 11


  85 003c 0368     		ldr	r3, [r0]
  86 003e 1868     		ldr	r0, [r3]
  87              	.LVL6:
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
  88              		.loc 1 486 0
  89              		@ sp needed
  90 0040 70BD     		pop	{r4, r5, r6, pc}
  91              	.LVL7:
  92              	.L7:
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      }
  93              		.loc 1 471 0
  94 0042 AB00     		lsls	r3, r5, #2
  95 0044 CB5C     		ldrb	r3, [r1, r3]
  96 0046 0468     		ldr	r4, [r0]
  97 0048 2370     		strb	r3, [r4]
  98 004a F3E7     		b	.L5
  99              	.L8:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      }
 100              		.loc 1 475 0
 101 004c AC00     		lsls	r4, r5, #2
 102 004e 0B5D     		ldrb	r3, [r1, r4]
 103 0050 1B02     		lsls	r3, r3, #8
 104 0052 0C19     		adds	r4, r1, r4
 105 0054 6478     		ldrb	r4, [r4, #1]
 106 0056 2343     		orrs	r3, r4
 107 0058 0468     		ldr	r4, [r0]
 108 005a 2380     		strh	r3, [r4]
 109 005c ECE7     		b	.L6
 110              	.L9:
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        *(uint8_t volatile*) (&hcrc->Instance->DR) = pBuffer[4*i+2];       
 111              		.loc 1 479 0
 112 005e AD00     		lsls	r5, r5, #2
 113              	.LVL8:
 114 0060 4B5D     		ldrb	r3, [r1, r5]
 115 0062 1B02     		lsls	r3, r3, #8
 116 0064 4D19     		adds	r5, r1, r5
 117 0066 6A78     		ldrb	r2, [r5, #1]
 118 0068 1343     		orrs	r3, r2
 119 006a 0268     		ldr	r2, [r0]
 120 006c 1380     		strh	r3, [r2]
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****      }
 121              		.loc 1 480 0
 122 006e AB78     		ldrb	r3, [r5, #2]
 123 0070 0268     		ldr	r2, [r0]
 124 0072 1370     		strb	r3, [r2]
 125 0074 E2E7     		b	.L4
 126              		.cfi_endproc
 127              	.LFE44:
 129              		.section	.text.CRC_Handle_16,"ax",%progbits
 130              		.align	1
 131              		.syntax unified
 132              		.code	16
 133              		.thumb_func
 134              		.fpu softvfp
 136              	CRC_Handle_16:
 137              	.LFB45:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 12


 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** /**             
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @brief  Enter 16-bit input data to the CRC calculator.
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   *         Specific data handling to optimize processing time.  
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  hcrc CRC handle
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  pBuffer pointer to the input data buffer
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @param  BufferLength input data buffer length
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   */  
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** static uint32_t CRC_Handle_16(CRC_HandleTypeDef *hcrc, uint16_t pBuffer[], uint32_t BufferLength)
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** {
 138              		.loc 1 499 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              	.LVL9:
 143 0000 70B5     		push	{r4, r5, r6, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 4, -16
 147              		.cfi_offset 5, -12
 148              		.cfi_offset 6, -8
 149              		.cfi_offset 14, -4
 150              	.LVL10:
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t i = 0U;  /* input data buffer index */
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Processing time optimization: 2 HalfWords are entered in a row with a single word write,
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    * in case of odd length, last HalfWord must be carefully fed to the CRC calculator to ensure 
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    * a correct type handling by the IP */
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   for(i = 0U; i < (BufferLength/2U); i++)
 151              		.loc 1 505 0
 152 0002 0025     		movs	r5, #0
 153 0004 08E0     		b	.L11
 154              	.LVL11:
 155              	.L12:
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     hcrc->Instance->DR = ((uint32_t)pBuffer[2U*i]<<16U) | (uint32_t)pBuffer[2U*i+1];     
 156              		.loc 1 507 0 discriminator 3
 157 0006 AC00     		lsls	r4, r5, #2
 158 0008 0B5B     		ldrh	r3, [r1, r4]
 159 000a 1B04     		lsls	r3, r3, #16
 160 000c 0C19     		adds	r4, r1, r4
 161 000e 6688     		ldrh	r6, [r4, #2]
 162 0010 0468     		ldr	r4, [r0]
 163 0012 3343     		orrs	r3, r6
 164 0014 2360     		str	r3, [r4]
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 165              		.loc 1 505 0 discriminator 3
 166 0016 0135     		adds	r5, r5, #1
 167              	.LVL12:
 168              	.L11:
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 169              		.loc 1 505 0 is_stmt 0 discriminator 1
 170 0018 5308     		lsrs	r3, r2, #1
 171 001a AB42     		cmp	r3, r5
 172 001c F3D8     		bhi	.L12
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 13


 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   if ((BufferLength%2U) != 0U)
 173              		.loc 1 509 0 is_stmt 1
 174 001e D307     		lsls	r3, r2, #31
 175 0020 03D5     		bpl	.L13
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****        *(uint16_t volatile*) (&hcrc->Instance->DR) = pBuffer[2*i]; 
 176              		.loc 1 511 0
 177 0022 AD00     		lsls	r5, r5, #2
 178              	.LVL13:
 179 0024 6B5A     		ldrh	r3, [r5, r1]
 180 0026 0268     		ldr	r2, [r0]
 181              	.LVL14:
 182 0028 1380     		strh	r3, [r2]
 183              	.L13:
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****    
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return the CRC computed value */ 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   return hcrc->Instance->DR;
 184              		.loc 1 515 0
 185 002a 0368     		ldr	r3, [r0]
 186 002c 1868     		ldr	r0, [r3]
 187              	.LVL15:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 188              		.loc 1 516 0
 189              		@ sp needed
 190 002e 70BD     		pop	{r4, r5, r6, pc}
 191              		.cfi_endproc
 192              	.LFE45:
 194              		.section	.text.HAL_CRC_MspInit,"ax",%progbits
 195              		.align	1
 196              		.weak	HAL_CRC_MspInit
 197              		.syntax unified
 198              		.code	16
 199              		.thumb_func
 200              		.fpu softvfp
 202              	HAL_CRC_MspInit:
 203              	.LFB39:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Prevent unused argument(s) compilation warning */
 204              		.loc 1 233 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              	.LVL16:
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 210              		.loc 1 240 0
 211              		@ sp needed
 212 0000 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE39:
 216              		.section	.text.HAL_CRC_Init,"ax",%progbits
 217              		.align	1
 218              		.global	HAL_CRC_Init
 219              		.syntax unified
 220              		.code	16
 221              		.thumb_func
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 14


 222              		.fpu softvfp
 224              	HAL_CRC_Init:
 225              	.LFB37:
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the CRC handle allocation */
 226              		.loc 1 120 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL17:
 231 0000 10B5     		push	{r4, lr}
 232              	.LCFI2:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236 0002 041E     		subs	r4, r0, #0
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 237              		.loc 1 122 0
 238 0004 29D0     		beq	.L20
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {   
 239              		.loc 1 130 0
 240 0006 437F     		ldrb	r3, [r0, #29]
 241 0008 002B     		cmp	r3, #0
 242 000a 1ED0     		beq	.L22
 243              	.LVL18:
 244              	.L17:
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 245              		.loc 1 139 0
 246 000c 0223     		movs	r3, #2
 247 000e 6377     		strb	r3, [r4, #29]
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 248              		.loc 1 146 0
 249 0010 2000     		movs	r0, r4
 250 0012 FFF7FEFF 		bl	HAL_CRCEx_Init
 251              	.LVL19:
 252 0016 0028     		cmp	r0, #0
 253 0018 21D1     		bne	.L21
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 254              		.loc 1 154 0
 255 001a 6379     		ldrb	r3, [r4, #5]
 256 001c 002B     		cmp	r3, #0
 257 001e 18D1     		bne	.L18
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 258              		.loc 1 156 0
 259 0020 2368     		ldr	r3, [r4]
 260 0022 0122     		movs	r2, #1
 261 0024 5242     		rsbs	r2, r2, #0
 262 0026 1A61     		str	r2, [r3, #16]
 263              	.L19:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 264              		.loc 1 166 0
 265 0028 2268     		ldr	r2, [r4]
 266 002a 9368     		ldr	r3, [r2, #8]
 267 002c 6021     		movs	r1, #96
 268 002e 8B43     		bics	r3, r1
 269 0030 6169     		ldr	r1, [r4, #20]
 270 0032 0B43     		orrs	r3, r1
 271 0034 9360     		str	r3, [r2, #8]
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 15


 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 272              		.loc 1 170 0
 273 0036 2268     		ldr	r2, [r4]
 274 0038 9368     		ldr	r3, [r2, #8]
 275 003a 8021     		movs	r1, #128
 276 003c 8B43     		bics	r3, r1
 277 003e A169     		ldr	r1, [r4, #24]
 278 0040 0B43     		orrs	r3, r1
 279 0042 9360     		str	r3, [r2, #8]
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 280              		.loc 1 177 0
 281 0044 0123     		movs	r3, #1
 282 0046 6377     		strb	r3, [r4, #29]
 283              	.L16:
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 284              		.loc 1 181 0
 285              		@ sp needed
 286              	.LVL20:
 287 0048 10BD     		pop	{r4, pc}
 288              	.LVL21:
 289              	.L22:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 290              		.loc 1 133 0
 291 004a 0377     		strb	r3, [r0, #28]
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 292              		.loc 1 136 0
 293 004c FFF7FEFF 		bl	HAL_CRC_MspInit
 294              	.LVL22:
 295 0050 DCE7     		b	.L17
 296              	.L18:
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 297              		.loc 1 160 0
 298 0052 2368     		ldr	r3, [r4]
 299 0054 2269     		ldr	r2, [r4, #16]
 300 0056 1A61     		str	r2, [r3, #16]
 301 0058 E6E7     		b	.L19
 302              	.LVL23:
 303              	.L20:
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 304              		.loc 1 124 0
 305 005a 0120     		movs	r0, #1
 306              	.LVL24:
 307 005c F4E7     		b	.L16
 308              	.L21:
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 309              		.loc 1 148 0
 310 005e 0120     		movs	r0, #1
 311 0060 F2E7     		b	.L16
 312              		.cfi_endproc
 313              	.LFE37:
 315              		.section	.text.HAL_CRC_MspDeInit,"ax",%progbits
 316              		.align	1
 317              		.weak	HAL_CRC_MspDeInit
 318              		.syntax unified
 319              		.code	16
 320              		.thumb_func
 321              		.fpu softvfp
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 16


 323              	HAL_CRC_MspDeInit:
 324              	.LFB40:
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Prevent unused argument(s) compilation warning */
 325              		.loc 1 248 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL25:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 331              		.loc 1 255 0
 332              		@ sp needed
 333 0000 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE40:
 337              		.section	.text.HAL_CRC_DeInit,"ax",%progbits
 338              		.align	1
 339              		.global	HAL_CRC_DeInit
 340              		.syntax unified
 341              		.code	16
 342              		.thumb_func
 343              		.fpu softvfp
 345              	HAL_CRC_DeInit:
 346              	.LFB38:
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Check the CRC handle allocation */
 347              		.loc 1 189 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL26:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              	.LCFI3:
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 4, -16
 356              		.cfi_offset 5, -12
 357              		.cfi_offset 6, -8
 358              		.cfi_offset 14, -4
 359 0002 041E     		subs	r4, r0, #0
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 360              		.loc 1 191 0
 361 0004 13D0     		beq	.L26
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 362              		.loc 1 200 0
 363 0006 437F     		ldrb	r3, [r0, #29]
 364 0008 022B     		cmp	r3, #2
 365 000a 12D0     		beq	.L27
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 366              		.loc 1 206 0
 367 000c 0223     		movs	r3, #2
 368 000e 4377     		strb	r3, [r0, #29]
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 369              		.loc 1 209 0
 370 0010 0268     		ldr	r2, [r0]
 371 0012 9368     		ldr	r3, [r2, #8]
 372 0014 0121     		movs	r1, #1
 373 0016 0B43     		orrs	r3, r1
 374 0018 9360     		str	r3, [r2, #8]
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 17


 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 375              		.loc 1 212 0
 376 001a 0368     		ldr	r3, [r0]
 377 001c 1A79     		ldrb	r2, [r3, #4]
 378 001e 0025     		movs	r5, #0
 379 0020 1D71     		strb	r5, [r3, #4]
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 380              		.loc 1 215 0
 381 0022 FFF7FEFF 		bl	HAL_CRC_MspDeInit
 382              	.LVL27:
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 383              		.loc 1 218 0
 384 0026 6577     		strb	r5, [r4, #29]
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 385              		.loc 1 221 0
 386 0028 2577     		strb	r5, [r4, #28]
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 387              		.loc 1 224 0
 388 002a 0020     		movs	r0, #0
 389              	.L25:
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 390              		.loc 1 225 0
 391              		@ sp needed
 392              	.LVL28:
 393 002c 70BD     		pop	{r4, r5, r6, pc}
 394              	.LVL29:
 395              	.L26:
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 396              		.loc 1 193 0
 397 002e 0120     		movs	r0, #1
 398              	.LVL30:
 399 0030 FCE7     		b	.L25
 400              	.LVL31:
 401              	.L27:
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   }
 402              		.loc 1 202 0
 403 0032 0220     		movs	r0, #2
 404              	.LVL32:
 405 0034 FAE7     		b	.L25
 406              		.cfi_endproc
 407              	.LFE38:
 409              		.section	.text.HAL_CRC_Accumulate,"ax",%progbits
 410              		.align	1
 411              		.global	HAL_CRC_Accumulate
 412              		.syntax unified
 413              		.code	16
 414              		.thumb_func
 415              		.fpu softvfp
 417              	HAL_CRC_Accumulate:
 418              	.LFB41:
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t index = 0U; /* CRC input data buffer index */
 419              		.loc 1 297 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              	.LVL33:
 424 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 18


 425              	.LCFI4:
 426              		.cfi_def_cfa_offset 16
 427              		.cfi_offset 4, -16
 428              		.cfi_offset 5, -12
 429              		.cfi_offset 6, -8
 430              		.cfi_offset 14, -4
 431 0002 0400     		movs	r4, r0
 432              	.LVL34:
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     
 433              		.loc 1 302 0
 434 0004 037F     		ldrb	r3, [r0, #28]
 435 0006 012B     		cmp	r3, #1
 436 0008 22D0     		beq	.L35
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     
 437              		.loc 1 302 0 is_stmt 0 discriminator 2
 438 000a 0123     		movs	r3, #1
 439 000c 0377     		strb	r3, [r0, #28]
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 440              		.loc 1 305 0 is_stmt 1 discriminator 2
 441 000e 0133     		adds	r3, r3, #1
 442 0010 4377     		strb	r3, [r0, #29]
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 443              		.loc 1 307 0 discriminator 2
 444 0012 036A     		ldr	r3, [r0, #32]
 445 0014 022B     		cmp	r3, #2
 446 0016 18D0     		beq	.L31
 447 0018 032B     		cmp	r3, #3
 448 001a 11D0     		beq	.L37
 449 001c 012B     		cmp	r3, #1
 450 001e 11D0     		beq	.L39
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 451              		.loc 1 299 0
 452 0020 0020     		movs	r0, #0
 453              	.LVL35:
 454 0022 08E0     		b	.L30
 455              	.LVL36:
 456              	.L34:
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       }
 457              		.loc 1 313 0 discriminator 3
 458 0024 2068     		ldr	r0, [r4]
 459 0026 9D00     		lsls	r5, r3, #2
 460 0028 6D58     		ldr	r5, [r5, r1]
 461 002a 0560     		str	r5, [r0]
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 462              		.loc 1 311 0 discriminator 3
 463 002c 0133     		adds	r3, r3, #1
 464              	.LVL37:
 465              	.L32:
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 466              		.loc 1 311 0 is_stmt 0 discriminator 1
 467 002e 9342     		cmp	r3, r2
 468 0030 F8D3     		bcc	.L34
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 469              		.loc 1 315 0 is_stmt 1
 470 0032 2368     		ldr	r3, [r4]
 471              	.LVL38:
 472 0034 1868     		ldr	r0, [r3]
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 19


 473              	.LVL39:
 474              	.L30:
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 475              		.loc 1 331 0
 476 0036 0123     		movs	r3, #1
 477 0038 6377     		strb	r3, [r4, #29]
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 478              		.loc 1 334 0
 479 003a 0023     		movs	r3, #0
 480 003c 2377     		strb	r3, [r4, #28]
 481              	.LVL40:
 482              	.L28:
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 483              		.loc 1 338 0
 484              		@ sp needed
 485              	.LVL41:
 486 003e 70BD     		pop	{r4, r5, r6, pc}
 487              	.LVL42:
 488              	.L37:
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 489              		.loc 1 311 0
 490 0040 0023     		movs	r3, #0
 491 0042 F4E7     		b	.L32
 492              	.L39:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 493              		.loc 1 319 0
 494 0044 FFF7FEFF 		bl	CRC_Handle_8
 495              	.LVL43:
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 496              		.loc 1 320 0
 497 0048 F5E7     		b	.L30
 498              	.LVL44:
 499              	.L31:
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 500              		.loc 1 323 0
 501 004a FFF7FEFF 		bl	CRC_Handle_16
 502              	.LVL45:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 503              		.loc 1 324 0
 504 004e F2E7     		b	.L30
 505              	.LVL46:
 506              	.L35:
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     
 507              		.loc 1 302 0
 508 0050 0220     		movs	r0, #2
 509              	.LVL47:
 510 0052 F4E7     		b	.L28
 511              		.cfi_endproc
 512              	.LFE41:
 514              		.section	.text.HAL_CRC_Calculate,"ax",%progbits
 515              		.align	1
 516              		.global	HAL_CRC_Calculate
 517              		.syntax unified
 518              		.code	16
 519              		.thumb_func
 520              		.fpu softvfp
 522              	HAL_CRC_Calculate:
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 20


 523              	.LFB42:
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   uint32_t index = 0U; /* CRC input data buffer index */
 524              		.loc 1 357 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              	.LVL48:
 529 0000 70B5     		push	{r4, r5, r6, lr}
 530              	.LCFI5:
 531              		.cfi_def_cfa_offset 16
 532              		.cfi_offset 4, -16
 533              		.cfi_offset 5, -12
 534              		.cfi_offset 6, -8
 535              		.cfi_offset 14, -4
 536 0002 0400     		movs	r4, r0
 537              	.LVL49:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 538              		.loc 1 362 0
 539 0004 037F     		ldrb	r3, [r0, #28]
 540 0006 012B     		cmp	r3, #1
 541 0008 28D0     		beq	.L47
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 542              		.loc 1 362 0 is_stmt 0 discriminator 2
 543 000a 0125     		movs	r5, #1
 544 000c 0577     		strb	r5, [r0, #28]
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 545              		.loc 1 365 0 is_stmt 1 discriminator 2
 546 000e 0223     		movs	r3, #2
 547 0010 4377     		strb	r3, [r0, #29]
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 548              		.loc 1 369 0 discriminator 2
 549 0012 0068     		ldr	r0, [r0]
 550              	.LVL50:
 551 0014 8368     		ldr	r3, [r0, #8]
 552 0016 2B43     		orrs	r3, r5
 553 0018 8360     		str	r3, [r0, #8]
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   {
 554              		.loc 1 371 0 discriminator 2
 555 001a 236A     		ldr	r3, [r4, #32]
 556 001c 022B     		cmp	r3, #2
 557 001e 19D0     		beq	.L43
 558 0020 032B     		cmp	r3, #3
 559 0022 11D0     		beq	.L49
 560 0024 012B     		cmp	r3, #1
 561 0026 11D0     		beq	.L51
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****     
 562              		.loc 1 359 0
 563 0028 0020     		movs	r0, #0
 564 002a 08E0     		b	.L42
 565              	.LVL51:
 566              	.L46:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       }
 567              		.loc 1 377 0 discriminator 3
 568 002c 2068     		ldr	r0, [r4]
 569 002e 9D00     		lsls	r5, r3, #2
 570 0030 6D58     		ldr	r5, [r5, r1]
 571 0032 0560     		str	r5, [r0]
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 21


 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 572              		.loc 1 375 0 discriminator 3
 573 0034 0133     		adds	r3, r3, #1
 574              	.LVL52:
 575              	.L44:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 576              		.loc 1 375 0 is_stmt 0 discriminator 1
 577 0036 9342     		cmp	r3, r2
 578 0038 F8D3     		bcc	.L46
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 579              		.loc 1 379 0 is_stmt 1
 580 003a 2368     		ldr	r3, [r4]
 581              	.LVL53:
 582 003c 1868     		ldr	r0, [r3]
 583              	.LVL54:
 584              	.L42:
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 585              		.loc 1 397 0
 586 003e 0123     		movs	r3, #1
 587 0040 6377     		strb	r3, [r4, #29]
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 588              		.loc 1 400 0
 589 0042 0023     		movs	r3, #0
 590 0044 2377     		strb	r3, [r4, #28]
 591              	.LVL55:
 592              	.L40:
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 593              		.loc 1 404 0
 594              		@ sp needed
 595              	.LVL56:
 596 0046 70BD     		pop	{r4, r5, r6, pc}
 597              	.LVL57:
 598              	.L49:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       {
 599              		.loc 1 375 0
 600 0048 0023     		movs	r3, #0
 601 004a F4E7     		b	.L44
 602              	.L51:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 603              		.loc 1 384 0
 604 004c 2000     		movs	r0, r4
 605 004e FFF7FEFF 		bl	CRC_Handle_8
 606              	.LVL58:
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 607              		.loc 1 385 0
 608 0052 F4E7     		b	.L42
 609              	.LVL59:
 610              	.L43:
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       break;
 611              		.loc 1 389 0
 612 0054 2000     		movs	r0, r4
 613 0056 FFF7FEFF 		bl	CRC_Handle_16
 614              	.LVL60:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****       
 615              		.loc 1 390 0
 616 005a F0E7     		b	.L42
 617              	.LVL61:
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 22


 618              	.L47:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   
 619              		.loc 1 362 0
 620 005c 0220     		movs	r0, #2
 621              	.LVL62:
 622 005e F2E7     		b	.L40
 623              		.cfi_endproc
 624              	.LFE42:
 626              		.section	.text.HAL_CRC_GetState,"ax",%progbits
 627              		.align	1
 628              		.global	HAL_CRC_GetState
 629              		.syntax unified
 630              		.code	16
 631              		.thumb_func
 632              		.fpu softvfp
 634              	HAL_CRC_GetState:
 635              	.LFB43:
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c ****   /* Return CRC handle state */
 636              		.loc 1 430 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641              	.LVL63:
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** }
 642              		.loc 1 432 0
 643 0000 407F     		ldrb	r0, [r0, #29]
 644              	.LVL64:
 645 0002 C0B2     		uxtb	r0, r0
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc.c **** 
 646              		.loc 1 433 0
 647              		@ sp needed
 648 0004 7047     		bx	lr
 649              		.cfi_endproc
 650              	.LFE43:
 652              		.text
 653              	.Letext0:
 654              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 655              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 656              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 657              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 658              		.file 6 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 659              		.file 7 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 660              		.file 8 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 661              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 662              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 663              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_crc.h"
 664              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_crc_ex.h"
ARM GAS  E:\cygwin64\tmp\ccj4MQjB.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_crc.c
E:\cygwin64\tmp\ccj4MQjB.s:16     .text.CRC_Handle_8:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:22     .text.CRC_Handle_8:00000000 CRC_Handle_8
E:\cygwin64\tmp\ccj4MQjB.s:130    .text.CRC_Handle_16:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:136    .text.CRC_Handle_16:00000000 CRC_Handle_16
E:\cygwin64\tmp\ccj4MQjB.s:195    .text.HAL_CRC_MspInit:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:202    .text.HAL_CRC_MspInit:00000000 HAL_CRC_MspInit
E:\cygwin64\tmp\ccj4MQjB.s:217    .text.HAL_CRC_Init:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:224    .text.HAL_CRC_Init:00000000 HAL_CRC_Init
E:\cygwin64\tmp\ccj4MQjB.s:316    .text.HAL_CRC_MspDeInit:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:323    .text.HAL_CRC_MspDeInit:00000000 HAL_CRC_MspDeInit
E:\cygwin64\tmp\ccj4MQjB.s:338    .text.HAL_CRC_DeInit:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:345    .text.HAL_CRC_DeInit:00000000 HAL_CRC_DeInit
E:\cygwin64\tmp\ccj4MQjB.s:410    .text.HAL_CRC_Accumulate:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:417    .text.HAL_CRC_Accumulate:00000000 HAL_CRC_Accumulate
E:\cygwin64\tmp\ccj4MQjB.s:515    .text.HAL_CRC_Calculate:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:522    .text.HAL_CRC_Calculate:00000000 HAL_CRC_Calculate
E:\cygwin64\tmp\ccj4MQjB.s:627    .text.HAL_CRC_GetState:00000000 $t
E:\cygwin64\tmp\ccj4MQjB.s:634    .text.HAL_CRC_GetState:00000000 HAL_CRC_GetState

UNDEFINED SYMBOLS
HAL_CRCEx_Init

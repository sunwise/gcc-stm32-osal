ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART1_UART_Init:
  24              	.LFB37:
  25              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * File Name          : USART.c
   4:Core/Src/usart.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/usart.c ****   *                      of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_rx;
  30:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_tx;
  31:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_tx;
  32:Core/Src/usart.c **** 
  33:Core/Src/usart.c **** /* USART1 init function */
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 2


  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  36:Core/Src/usart.c **** {
  26              		.loc 1 36 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   huart1.Instance = USART1;
  35              		.loc 1 38 0
  36 0002 0C48     		ldr	r0, .L4
  37 0004 0C4B     		ldr	r3, .L4+4
  38 0006 0360     		str	r3, [r0]
  39:Core/Src/usart.c ****   huart1.Init.BaudRate = 38400;
  39              		.loc 1 39 0
  40 0008 9623     		movs	r3, #150
  41 000a 1B02     		lsls	r3, r3, #8
  42 000c 4360     		str	r3, [r0, #4]
  40:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  43              		.loc 1 40 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  41:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  46              		.loc 1 41 0
  47 0012 C360     		str	r3, [r0, #12]
  42:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  48              		.loc 1 42 0
  49 0014 0361     		str	r3, [r0, #16]
  43:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  50              		.loc 1 43 0
  51 0016 0C22     		movs	r2, #12
  52 0018 4261     		str	r2, [r0, #20]
  44:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  53              		.loc 1 44 0
  54 001a 8361     		str	r3, [r0, #24]
  45:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  55              		.loc 1 45 0
  56 001c C361     		str	r3, [r0, #28]
  46:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  57              		.loc 1 46 0
  58 001e 0362     		str	r3, [r0, #32]
  47:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  59              		.loc 1 47 0
  60 0020 4362     		str	r3, [r0, #36]
  48:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  61              		.loc 1 48 0
  62 0022 FFF7FEFF 		bl	HAL_UART_Init
  63              	.LVL0:
  64 0026 0028     		cmp	r0, #0
  65 0028 00D1     		bne	.L3
  66              	.L1:
  49:Core/Src/usart.c ****   {
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 3


  50:Core/Src/usart.c ****     Error_Handler();
  51:Core/Src/usart.c ****   }
  52:Core/Src/usart.c **** 
  53:Core/Src/usart.c **** }
  67              		.loc 1 53 0
  68              		@ sp needed
  69 002a 10BD     		pop	{r4, pc}
  70              	.L3:
  50:Core/Src/usart.c ****   }
  71              		.loc 1 50 0
  72 002c FFF7FEFF 		bl	Error_Handler
  73              	.LVL1:
  74              		.loc 1 53 0
  75 0030 FBE7     		b	.L1
  76              	.L5:
  77 0032 C046     		.align	2
  78              	.L4:
  79 0034 00000000 		.word	huart1
  80 0038 00380140 		.word	1073821696
  81              		.cfi_endproc
  82              	.LFE37:
  84              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  85              		.align	1
  86              		.global	MX_USART2_UART_Init
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	MX_USART2_UART_Init:
  93              	.LFB38:
  54:Core/Src/usart.c **** /* USART2 init function */
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  57:Core/Src/usart.c **** {
  94              		.loc 1 57 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 10B5     		push	{r4, lr}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c ****   huart2.Instance = USART2;
 103              		.loc 1 59 0
 104 0002 0C48     		ldr	r0, .L9
 105 0004 0C4B     		ldr	r3, .L9+4
 106 0006 0360     		str	r3, [r0]
  60:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
 107              		.loc 1 60 0
 108 0008 E123     		movs	r3, #225
 109 000a 5B02     		lsls	r3, r3, #9
 110 000c 4360     		str	r3, [r0, #4]
  61:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 111              		.loc 1 61 0
 112 000e 0023     		movs	r3, #0
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 4


 113 0010 8360     		str	r3, [r0, #8]
  62:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 114              		.loc 1 62 0
 115 0012 C360     		str	r3, [r0, #12]
  63:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 116              		.loc 1 63 0
 117 0014 0361     		str	r3, [r0, #16]
  64:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 118              		.loc 1 64 0
 119 0016 0C22     		movs	r2, #12
 120 0018 4261     		str	r2, [r0, #20]
  65:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 121              		.loc 1 65 0
 122 001a 8361     		str	r3, [r0, #24]
  66:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 123              		.loc 1 66 0
 124 001c C361     		str	r3, [r0, #28]
  67:Core/Src/usart.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 125              		.loc 1 67 0
 126 001e 0362     		str	r3, [r0, #32]
  68:Core/Src/usart.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 127              		.loc 1 68 0
 128 0020 4362     		str	r3, [r0, #36]
  69:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 129              		.loc 1 69 0
 130 0022 FFF7FEFF 		bl	HAL_UART_Init
 131              	.LVL2:
 132 0026 0028     		cmp	r0, #0
 133 0028 00D1     		bne	.L8
 134              	.L6:
  70:Core/Src/usart.c ****   {
  71:Core/Src/usart.c ****     Error_Handler();
  72:Core/Src/usart.c ****   }
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c **** }
 135              		.loc 1 74 0
 136              		@ sp needed
 137 002a 10BD     		pop	{r4, pc}
 138              	.L8:
  71:Core/Src/usart.c ****   }
 139              		.loc 1 71 0
 140 002c FFF7FEFF 		bl	Error_Handler
 141              	.LVL3:
 142              		.loc 1 74 0
 143 0030 FBE7     		b	.L6
 144              	.L10:
 145 0032 C046     		.align	2
 146              	.L9:
 147 0034 00000000 		.word	huart2
 148 0038 00440040 		.word	1073759232
 149              		.cfi_endproc
 150              	.LFE38:
 152              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 153              		.align	1
 154              		.global	HAL_UART_MspInit
 155              		.syntax unified
 156              		.code	16
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 5


 157              		.thumb_func
 158              		.fpu softvfp
 160              	HAL_UART_MspInit:
 161              	.LFB39:
  75:Core/Src/usart.c **** 
  76:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  77:Core/Src/usart.c **** {
 162              		.loc 1 77 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 40
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL4:
 167 0000 10B5     		push	{r4, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 172 0002 8AB0     		sub	sp, sp, #40
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 48
 175 0004 0400     		movs	r4, r0
  78:Core/Src/usart.c **** 
  79:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 176              		.loc 1 79 0
 177 0006 1422     		movs	r2, #20
 178 0008 0021     		movs	r1, #0
 179 000a 05A8     		add	r0, sp, #20
 180              	.LVL5:
 181 000c FFF7FEFF 		bl	memset
 182              	.LVL6:
  80:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 183              		.loc 1 80 0
 184 0010 2368     		ldr	r3, [r4]
 185 0012 464A     		ldr	r2, .L22
 186 0014 9342     		cmp	r3, r2
 187 0016 04D0     		beq	.L17
  81:Core/Src/usart.c ****   {
  82:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  83:Core/Src/usart.c **** 
  84:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  85:Core/Src/usart.c ****     /* USART1 clock enable */
  86:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  87:Core/Src/usart.c ****   
  88:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  89:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
  90:Core/Src/usart.c ****     PB6     ------> USART1_TX
  91:Core/Src/usart.c ****     PB7     ------> USART1_RX 
  92:Core/Src/usart.c ****     */
  93:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
  94:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  95:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  96:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  97:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
  98:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  99:Core/Src/usart.c **** 
 100:Core/Src/usart.c ****     /* USART1 DMA Init */
 101:Core/Src/usart.c ****     /* USART1_RX Init */
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 6


 102:Core/Src/usart.c ****     hdma_usart1_rx.Instance = DMA1_Channel3;
 103:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 104:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 105:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 106:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 107:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 108:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 109:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 110:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 111:Core/Src/usart.c ****     {
 112:Core/Src/usart.c ****       Error_Handler();
 113:Core/Src/usart.c ****     }
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 116:Core/Src/usart.c **** 
 117:Core/Src/usart.c ****     /* USART1_TX Init */
 118:Core/Src/usart.c ****     hdma_usart1_tx.Instance = DMA1_Channel2;
 119:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 120:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 121:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 122:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 123:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 124:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 125:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_MEDIUM;
 126:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 127:Core/Src/usart.c ****     {
 128:Core/Src/usart.c ****       Error_Handler();
 129:Core/Src/usart.c ****     }
 130:Core/Src/usart.c **** 
 131:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 132:Core/Src/usart.c **** 
 133:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 134:Core/Src/usart.c **** 
 135:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 136:Core/Src/usart.c ****   }
 137:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 188              		.loc 1 137 0
 189 0018 454A     		ldr	r2, .L22+4
 190 001a 9342     		cmp	r3, r2
 191 001c 50D0     		beq	.L18
 192              	.L11:
 138:Core/Src/usart.c ****   {
 139:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 140:Core/Src/usart.c **** 
 141:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
 142:Core/Src/usart.c ****     /* USART2 clock enable */
 143:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 144:Core/Src/usart.c ****   
 145:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 146:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 147:Core/Src/usart.c ****     PA2     ------> USART2_TX
 148:Core/Src/usart.c ****     PA3     ------> USART2_RX 
 149:Core/Src/usart.c ****     */
 150:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 151:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 152:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 153:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 7


 154:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 155:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 156:Core/Src/usart.c **** 
 157:Core/Src/usart.c ****     /* USART2 DMA Init */
 158:Core/Src/usart.c ****     /* USART2_TX Init */
 159:Core/Src/usart.c ****     hdma_usart2_tx.Instance = DMA1_Channel4;
 160:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 161:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 162:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 163:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 164:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 165:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 166:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 167:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 168:Core/Src/usart.c ****     {
 169:Core/Src/usart.c ****       Error_Handler();
 170:Core/Src/usart.c ****     }
 171:Core/Src/usart.c **** 
 172:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart2_tx);
 173:Core/Src/usart.c **** 
 174:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 175:Core/Src/usart.c **** 
 176:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 177:Core/Src/usart.c ****   }
 178:Core/Src/usart.c **** }
 193              		.loc 1 178 0
 194 001e 0AB0     		add	sp, sp, #40
 195              		@ sp needed
 196              	.LVL7:
 197 0020 10BD     		pop	{r4, pc}
 198              	.LVL8:
 199              	.L17:
 200              	.LBB2:
  86:Core/Src/usart.c ****   
 201              		.loc 1 86 0
 202 0022 444B     		ldr	r3, .L22+8
 203 0024 9969     		ldr	r1, [r3, #24]
 204 0026 8020     		movs	r0, #128
 205 0028 C001     		lsls	r0, r0, #7
 206 002a 0143     		orrs	r1, r0
 207 002c 9961     		str	r1, [r3, #24]
 208 002e 9A69     		ldr	r2, [r3, #24]
 209 0030 0240     		ands	r2, r0
 210 0032 0192     		str	r2, [sp, #4]
 211 0034 019A     		ldr	r2, [sp, #4]
 212              	.LBE2:
 213              	.LBB3:
  88:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
 214              		.loc 1 88 0
 215 0036 5A69     		ldr	r2, [r3, #20]
 216 0038 8021     		movs	r1, #128
 217 003a C902     		lsls	r1, r1, #11
 218 003c 0A43     		orrs	r2, r1
 219 003e 5A61     		str	r2, [r3, #20]
 220 0040 5B69     		ldr	r3, [r3, #20]
 221 0042 0B40     		ands	r3, r1
 222 0044 0293     		str	r3, [sp, #8]
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 8


 223 0046 029B     		ldr	r3, [sp, #8]
 224              	.LBE3:
  93:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 225              		.loc 1 93 0
 226 0048 C023     		movs	r3, #192
 227 004a 0593     		str	r3, [sp, #20]
  94:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 228              		.loc 1 94 0
 229 004c BE3B     		subs	r3, r3, #190
 230 004e 0693     		str	r3, [sp, #24]
  96:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 231              		.loc 1 96 0
 232 0050 0133     		adds	r3, r3, #1
 233 0052 0893     		str	r3, [sp, #32]
  98:Core/Src/usart.c **** 
 234              		.loc 1 98 0
 235 0054 05A9     		add	r1, sp, #20
 236 0056 3848     		ldr	r0, .L22+12
 237 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 238              	.LVL9:
 102:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 239              		.loc 1 102 0
 240 005c 3748     		ldr	r0, .L22+16
 241 005e 384B     		ldr	r3, .L22+20
 242 0060 0360     		str	r3, [r0]
 103:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 243              		.loc 1 103 0
 244 0062 0023     		movs	r3, #0
 245 0064 4360     		str	r3, [r0, #4]
 104:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 246              		.loc 1 104 0
 247 0066 8360     		str	r3, [r0, #8]
 105:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 248              		.loc 1 105 0
 249 0068 8022     		movs	r2, #128
 250 006a C260     		str	r2, [r0, #12]
 106:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 251              		.loc 1 106 0
 252 006c 0361     		str	r3, [r0, #16]
 107:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 253              		.loc 1 107 0
 254 006e 4361     		str	r3, [r0, #20]
 108:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 255              		.loc 1 108 0
 256 0070 8361     		str	r3, [r0, #24]
 109:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 257              		.loc 1 109 0
 258 0072 8023     		movs	r3, #128
 259 0074 9B01     		lsls	r3, r3, #6
 260 0076 C361     		str	r3, [r0, #28]
 110:Core/Src/usart.c ****     {
 261              		.loc 1 110 0
 262 0078 FFF7FEFF 		bl	HAL_DMA_Init
 263              	.LVL10:
 264 007c 0028     		cmp	r0, #0
 265 007e 19D1     		bne	.L19
 266              	.L13:
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 9


 115:Core/Src/usart.c **** 
 267              		.loc 1 115 0
 268 0080 2E4B     		ldr	r3, .L22+16
 269 0082 6366     		str	r3, [r4, #100]
 270 0084 5C62     		str	r4, [r3, #36]
 118:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 271              		.loc 1 118 0
 272 0086 2F48     		ldr	r0, .L22+24
 273 0088 2F4B     		ldr	r3, .L22+28
 274 008a 0360     		str	r3, [r0]
 119:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 275              		.loc 1 119 0
 276 008c 1023     		movs	r3, #16
 277 008e 4360     		str	r3, [r0, #4]
 120:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 278              		.loc 1 120 0
 279 0090 0023     		movs	r3, #0
 280 0092 8360     		str	r3, [r0, #8]
 121:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 281              		.loc 1 121 0
 282 0094 8022     		movs	r2, #128
 283 0096 C260     		str	r2, [r0, #12]
 122:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 284              		.loc 1 122 0
 285 0098 0361     		str	r3, [r0, #16]
 123:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 286              		.loc 1 123 0
 287 009a 4361     		str	r3, [r0, #20]
 124:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_MEDIUM;
 288              		.loc 1 124 0
 289 009c 8361     		str	r3, [r0, #24]
 125:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 290              		.loc 1 125 0
 291 009e 8023     		movs	r3, #128
 292 00a0 5B01     		lsls	r3, r3, #5
 293 00a2 C361     		str	r3, [r0, #28]
 126:Core/Src/usart.c ****     {
 294              		.loc 1 126 0
 295 00a4 FFF7FEFF 		bl	HAL_DMA_Init
 296              	.LVL11:
 297 00a8 0028     		cmp	r0, #0
 298 00aa 06D1     		bne	.L20
 299              	.L14:
 131:Core/Src/usart.c **** 
 300              		.loc 1 131 0
 301 00ac 254B     		ldr	r3, .L22+24
 302 00ae 2366     		str	r3, [r4, #96]
 303 00b0 5C62     		str	r4, [r3, #36]
 304 00b2 B4E7     		b	.L11
 305              	.L19:
 112:Core/Src/usart.c ****     }
 306              		.loc 1 112 0
 307 00b4 FFF7FEFF 		bl	Error_Handler
 308              	.LVL12:
 309 00b8 E2E7     		b	.L13
 310              	.L20:
 128:Core/Src/usart.c ****     }
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 10


 311              		.loc 1 128 0
 312 00ba FFF7FEFF 		bl	Error_Handler
 313              	.LVL13:
 314 00be F5E7     		b	.L14
 315              	.L18:
 316              	.LBB4:
 143:Core/Src/usart.c ****   
 317              		.loc 1 143 0
 318 00c0 1C4B     		ldr	r3, .L22+8
 319 00c2 D969     		ldr	r1, [r3, #28]
 320 00c4 8022     		movs	r2, #128
 321 00c6 9202     		lsls	r2, r2, #10
 322 00c8 1143     		orrs	r1, r2
 323 00ca D961     		str	r1, [r3, #28]
 324 00cc D969     		ldr	r1, [r3, #28]
 325 00ce 1140     		ands	r1, r2
 326 00d0 0391     		str	r1, [sp, #12]
 327 00d2 0399     		ldr	r1, [sp, #12]
 328              	.LBE4:
 329              	.LBB5:
 145:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 330              		.loc 1 145 0
 331 00d4 5969     		ldr	r1, [r3, #20]
 332 00d6 1143     		orrs	r1, r2
 333 00d8 5961     		str	r1, [r3, #20]
 334 00da 5B69     		ldr	r3, [r3, #20]
 335 00dc 1A40     		ands	r2, r3
 336 00de 0492     		str	r2, [sp, #16]
 337 00e0 049B     		ldr	r3, [sp, #16]
 338              	.LBE5:
 150:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 339              		.loc 1 150 0
 340 00e2 0C23     		movs	r3, #12
 341 00e4 0593     		str	r3, [sp, #20]
 151:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 342              		.loc 1 151 0
 343 00e6 0A3B     		subs	r3, r3, #10
 344 00e8 0693     		str	r3, [sp, #24]
 153:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 345              		.loc 1 153 0
 346 00ea 0133     		adds	r3, r3, #1
 347 00ec 0893     		str	r3, [sp, #32]
 154:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 348              		.loc 1 154 0
 349 00ee 023B     		subs	r3, r3, #2
 350 00f0 0993     		str	r3, [sp, #36]
 155:Core/Src/usart.c **** 
 351              		.loc 1 155 0
 352 00f2 9020     		movs	r0, #144
 353 00f4 05A9     		add	r1, sp, #20
 354 00f6 C005     		lsls	r0, r0, #23
 355 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 356              	.LVL14:
 159:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 357              		.loc 1 159 0
 358 00fc 1348     		ldr	r0, .L22+32
 359 00fe 144B     		ldr	r3, .L22+36
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 11


 360 0100 0360     		str	r3, [r0]
 160:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 361              		.loc 1 160 0
 362 0102 1023     		movs	r3, #16
 363 0104 4360     		str	r3, [r0, #4]
 161:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 364              		.loc 1 161 0
 365 0106 0023     		movs	r3, #0
 366 0108 8360     		str	r3, [r0, #8]
 162:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 367              		.loc 1 162 0
 368 010a 8022     		movs	r2, #128
 369 010c C260     		str	r2, [r0, #12]
 163:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 370              		.loc 1 163 0
 371 010e 0361     		str	r3, [r0, #16]
 164:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 372              		.loc 1 164 0
 373 0110 4361     		str	r3, [r0, #20]
 165:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 374              		.loc 1 165 0
 375 0112 8361     		str	r3, [r0, #24]
 166:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 376              		.loc 1 166 0
 377 0114 C361     		str	r3, [r0, #28]
 167:Core/Src/usart.c ****     {
 378              		.loc 1 167 0
 379 0116 FFF7FEFF 		bl	HAL_DMA_Init
 380              	.LVL15:
 381 011a 0028     		cmp	r0, #0
 382 011c 03D1     		bne	.L21
 383              	.L16:
 172:Core/Src/usart.c **** 
 384              		.loc 1 172 0
 385 011e 0B4B     		ldr	r3, .L22+32
 386 0120 2366     		str	r3, [r4, #96]
 387 0122 5C62     		str	r4, [r3, #36]
 388              		.loc 1 178 0
 389 0124 7BE7     		b	.L11
 390              	.L21:
 169:Core/Src/usart.c ****     }
 391              		.loc 1 169 0
 392 0126 FFF7FEFF 		bl	Error_Handler
 393              	.LVL16:
 394 012a F8E7     		b	.L16
 395              	.L23:
 396              		.align	2
 397              	.L22:
 398 012c 00380140 		.word	1073821696
 399 0130 00440040 		.word	1073759232
 400 0134 00100240 		.word	1073876992
 401 0138 00040048 		.word	1207960576
 402 013c 00000000 		.word	hdma_usart1_rx
 403 0140 30000240 		.word	1073872944
 404 0144 00000000 		.word	hdma_usart1_tx
 405 0148 1C000240 		.word	1073872924
 406 014c 00000000 		.word	hdma_usart2_tx
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 12


 407 0150 44000240 		.word	1073872964
 408              		.cfi_endproc
 409              	.LFE39:
 411              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_UART_MspDeInit
 414              		.syntax unified
 415              		.code	16
 416              		.thumb_func
 417              		.fpu softvfp
 419              	HAL_UART_MspDeInit:
 420              	.LFB40:
 179:Core/Src/usart.c **** 
 180:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 181:Core/Src/usart.c **** {
 421              		.loc 1 181 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              	.LVL17:
 426 0000 10B5     		push	{r4, lr}
 427              	.LCFI4:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 4, -8
 430              		.cfi_offset 14, -4
 431 0002 0400     		movs	r4, r0
 182:Core/Src/usart.c **** 
 183:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 432              		.loc 1 183 0
 433 0004 0368     		ldr	r3, [r0]
 434 0006 154A     		ldr	r2, .L29
 435 0008 9342     		cmp	r3, r2
 436 000a 03D0     		beq	.L27
 184:Core/Src/usart.c ****   {
 185:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 186:Core/Src/usart.c **** 
 187:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 188:Core/Src/usart.c ****     /* Peripheral clock disable */
 189:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 190:Core/Src/usart.c ****   
 191:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
 192:Core/Src/usart.c ****     PB6     ------> USART1_TX
 193:Core/Src/usart.c ****     PB7     ------> USART1_RX 
 194:Core/Src/usart.c ****     */
 195:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 196:Core/Src/usart.c **** 
 197:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 198:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 199:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 200:Core/Src/usart.c **** 
 201:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 202:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 203:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 204:Core/Src/usart.c **** 
 205:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 206:Core/Src/usart.c ****   }
 207:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 13


 437              		.loc 1 207 0
 438 000c 144A     		ldr	r2, .L29+4
 439 000e 9342     		cmp	r3, r2
 440 0010 13D0     		beq	.L28
 441              	.LVL18:
 442              	.L24:
 208:Core/Src/usart.c ****   {
 209:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 210:Core/Src/usart.c **** 
 211:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 212:Core/Src/usart.c ****     /* Peripheral clock disable */
 213:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 214:Core/Src/usart.c ****   
 215:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 216:Core/Src/usart.c ****     PA2     ------> USART2_TX
 217:Core/Src/usart.c ****     PA3     ------> USART2_RX 
 218:Core/Src/usart.c ****     */
 219:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 220:Core/Src/usart.c **** 
 221:Core/Src/usart.c ****     /* USART2 DMA DeInit */
 222:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 223:Core/Src/usart.c **** 
 224:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 225:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 226:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 227:Core/Src/usart.c **** 
 228:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 229:Core/Src/usart.c ****   }
 230:Core/Src/usart.c **** } 
 443              		.loc 1 230 0
 444              		@ sp needed
 445              	.LVL19:
 446 0012 10BD     		pop	{r4, pc}
 447              	.LVL20:
 448              	.L27:
 189:Core/Src/usart.c ****   
 449              		.loc 1 189 0
 450 0014 134A     		ldr	r2, .L29+8
 451 0016 9369     		ldr	r3, [r2, #24]
 452 0018 1349     		ldr	r1, .L29+12
 453 001a 0B40     		ands	r3, r1
 454 001c 9361     		str	r3, [r2, #24]
 195:Core/Src/usart.c **** 
 455              		.loc 1 195 0
 456 001e C021     		movs	r1, #192
 457 0020 1248     		ldr	r0, .L29+16
 458              	.LVL21:
 459 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 460              	.LVL22:
 198:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 461              		.loc 1 198 0
 462 0026 606E     		ldr	r0, [r4, #100]
 463 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 464              	.LVL23:
 199:Core/Src/usart.c **** 
 465              		.loc 1 199 0
 466 002c 206E     		ldr	r0, [r4, #96]
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 14


 467 002e FFF7FEFF 		bl	HAL_DMA_DeInit
 468              	.LVL24:
 202:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 469              		.loc 1 202 0
 470 0032 1B20     		movs	r0, #27
 471 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 472              	.LVL25:
 473 0038 EBE7     		b	.L24
 474              	.LVL26:
 475              	.L28:
 213:Core/Src/usart.c ****   
 476              		.loc 1 213 0
 477 003a 0A4A     		ldr	r2, .L29+8
 478 003c D369     		ldr	r3, [r2, #28]
 479 003e 0C49     		ldr	r1, .L29+20
 480 0040 0B40     		ands	r3, r1
 481 0042 D361     		str	r3, [r2, #28]
 219:Core/Src/usart.c **** 
 482              		.loc 1 219 0
 483 0044 9020     		movs	r0, #144
 484              	.LVL27:
 485 0046 0C21     		movs	r1, #12
 486 0048 C005     		lsls	r0, r0, #23
 487 004a FFF7FEFF 		bl	HAL_GPIO_DeInit
 488              	.LVL28:
 222:Core/Src/usart.c **** 
 489              		.loc 1 222 0
 490 004e 206E     		ldr	r0, [r4, #96]
 491 0050 FFF7FEFF 		bl	HAL_DMA_DeInit
 492              	.LVL29:
 225:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 493              		.loc 1 225 0
 494 0054 1C20     		movs	r0, #28
 495 0056 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 496              	.LVL30:
 497              		.loc 1 230 0
 498 005a DAE7     		b	.L24
 499              	.L30:
 500              		.align	2
 501              	.L29:
 502 005c 00380140 		.word	1073821696
 503 0060 00440040 		.word	1073759232
 504 0064 00100240 		.word	1073876992
 505 0068 FFBFFFFF 		.word	-16385
 506 006c 00040048 		.word	1207960576
 507 0070 FFFFFDFF 		.word	-131073
 508              		.cfi_endproc
 509              	.LFE40:
 511              		.comm	hdma_usart2_tx,68,4
 512              		.comm	hdma_usart1_tx,68,4
 513              		.comm	hdma_usart1_rx,68,4
 514              		.comm	huart2,112,4
 515              		.comm	huart1,112,4
 516              		.text
 517              	.Letext0:
 518              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 519              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 15


 520              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 521              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 522              		.file 6 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 523              		.file 7 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 524              		.file 8 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 525              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 526              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 527              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 528              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 529              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 530              		.file 14 "Core/Inc/usart.h"
 531              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 532              		.file 16 "Core/Inc/main.h"
 533              		.file 17 "<built-in>"
ARM GAS  E:\cygwin64\tmp\ccOg9ZDw.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
E:\cygwin64\tmp\ccOg9ZDw.s:16     .text.MX_USART1_UART_Init:00000000 $t
E:\cygwin64\tmp\ccOg9ZDw.s:23     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
E:\cygwin64\tmp\ccOg9ZDw.s:79     .text.MX_USART1_UART_Init:00000034 $d
                            *COM*:00000070 huart1
E:\cygwin64\tmp\ccOg9ZDw.s:85     .text.MX_USART2_UART_Init:00000000 $t
E:\cygwin64\tmp\ccOg9ZDw.s:92     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
E:\cygwin64\tmp\ccOg9ZDw.s:147    .text.MX_USART2_UART_Init:00000034 $d
                            *COM*:00000070 huart2
E:\cygwin64\tmp\ccOg9ZDw.s:153    .text.HAL_UART_MspInit:00000000 $t
E:\cygwin64\tmp\ccOg9ZDw.s:160    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
E:\cygwin64\tmp\ccOg9ZDw.s:398    .text.HAL_UART_MspInit:0000012c $d
                            *COM*:00000044 hdma_usart1_rx
                            *COM*:00000044 hdma_usart1_tx
                            *COM*:00000044 hdma_usart2_tx
E:\cygwin64\tmp\ccOg9ZDw.s:412    .text.HAL_UART_MspDeInit:00000000 $t
E:\cygwin64\tmp\ccOg9ZDw.s:419    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
E:\cygwin64\tmp\ccOg9ZDw.s:502    .text.HAL_UART_MspDeInit:0000005c $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
memset
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ

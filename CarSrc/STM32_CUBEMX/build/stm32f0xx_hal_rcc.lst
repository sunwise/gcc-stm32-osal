ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RCC_DeInit:
  24              	.LFB37:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** */
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 5


 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  26              		.loc 1 226 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  31              		.loc 1 228 0
  32 0000 0C4B     		ldr	r3, .L2
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 8121     		movs	r1, #129
  35 0006 0A43     		orrs	r2, r1
  36 0008 1A60     		str	r2, [r3]
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  37              		.loc 1 231 0
  38 000a 5A68     		ldr	r2, [r3, #4]
  39 000c 0A49     		ldr	r1, .L2+4
  40 000e 0A40     		ands	r2, r1
  41 0010 5A60     		str	r2, [r3, #4]
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  42              		.loc 1 234 0
  43 0012 1A68     		ldr	r2, [r3]
  44 0014 0949     		ldr	r1, .L2+8
  45 0016 0A40     		ands	r2, r1
  46 0018 1A60     		str	r2, [r3]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  47              		.loc 1 237 0
  48 001a 1A68     		ldr	r2, [r3]
  49 001c 0849     		ldr	r1, .L2+12
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 6


  50 001e 0A40     		ands	r2, r1
  51 0020 1A60     		str	r2, [r3]
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  52              		.loc 1 240 0
  53 0022 0022     		movs	r2, #0
  54 0024 5A60     		str	r2, [r3, #4]
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  55              		.loc 1 243 0
  56 0026 DA62     		str	r2, [r3, #44]
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  57              		.loc 1 246 0
  58 0028 1A63     		str	r2, [r3, #48]
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  59              		.loc 1 249 0
  60 002a 9A60     		str	r2, [r3, #8]
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  61              		.loc 1 252 0
  62 002c 054B     		ldr	r3, .L2+16
  63 002e 064A     		ldr	r2, .L2+20
  64 0030 1A60     		str	r2, [r3]
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
  65              		.loc 1 253 0
  66              		@ sp needed
  67 0032 7047     		bx	lr
  68              	.L3:
  69              		.align	2
  70              	.L2:
  71 0034 00100240 		.word	1073876992
  72 0038 0CF8FFF0 		.word	-251660276
  73 003c FFFFF6FE 		.word	-17367041
  74 0040 FFFFFBFF 		.word	-262145
  75 0044 00000000 		.word	SystemCoreClock
  76 0048 00127A00 		.word	8000000
  77              		.cfi_endproc
  78              	.LFE37:
  80              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_RCC_OscConfig
  83              		.syntax unified
  84              		.code	16
  85              		.thumb_func
  86              		.fpu softvfp
  88              	HAL_RCC_OscConfig:
  89              	.LFB38:
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 7


 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  90              		.loc 1 270 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL0:
  95 0000 70B5     		push	{r4, r5, r6, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 4, -16
  99              		.cfi_offset 5, -12
 100              		.cfi_offset 6, -8
 101              		.cfi_offset 14, -4
 102 0002 82B0     		sub	sp, sp, #8
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 24
 105 0004 0400     		movs	r4, r0
 106              	.LVL1:
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 107              		.loc 1 278 0
 108 0006 0368     		ldr	r3, [r0]
 109 0008 DB07     		lsls	r3, r3, #31
 110 000a 2BD5     		bpl	.L5
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 111              		.loc 1 284 0
 112 000c B34B     		ldr	r3, .L109
 113 000e 5A68     		ldr	r2, [r3, #4]
 114 0010 0C23     		movs	r3, #12
 115 0012 1340     		ands	r3, r2
 116 0014 042B     		cmp	r3, #4
 117 0016 1DD0     		beq	.L6
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 8


 118              		.loc 1 285 0
 119 0018 B04B     		ldr	r3, .L109
 120 001a 5A68     		ldr	r2, [r3, #4]
 121 001c 0C23     		movs	r3, #12
 122 001e 1340     		ands	r3, r2
 123 0020 082B     		cmp	r3, #8
 124 0022 0ED0     		beq	.L92
 125              	.L7:
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 126              		.loc 1 295 0
 127 0024 6368     		ldr	r3, [r4, #4]
 128 0026 012B     		cmp	r3, #1
 129 0028 41D0     		beq	.L93
 130              		.loc 1 295 0 is_stmt 0 discriminator 2
 131 002a 002B     		cmp	r3, #0
 132 002c 56D1     		bne	.L11
 133              		.loc 1 295 0 discriminator 3
 134 002e AB4B     		ldr	r3, .L109
 135 0030 1A68     		ldr	r2, [r3]
 136 0032 AB49     		ldr	r1, .L109+4
 137 0034 0A40     		ands	r2, r1
 138 0036 1A60     		str	r2, [r3]
 139 0038 1A68     		ldr	r2, [r3]
 140 003a AA49     		ldr	r1, .L109+8
 141 003c 0A40     		ands	r2, r1
 142 003e 1A60     		str	r2, [r3]
 143 0040 3BE0     		b	.L10
 144              	.L92:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 145              		.loc 1 285 0 is_stmt 1 discriminator 1
 146 0042 A64B     		ldr	r3, .L109
 147 0044 5B68     		ldr	r3, [r3, #4]
 148 0046 C022     		movs	r2, #192
 149 0048 5202     		lsls	r2, r2, #9
 150 004a 1340     		ands	r3, r2
 151 004c 8022     		movs	r2, #128
 152 004e 5202     		lsls	r2, r2, #9
 153 0050 9342     		cmp	r3, r2
 154 0052 E7D1     		bne	.L7
 155              	.L6:
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 156              		.loc 1 287 0
 157 0054 A14B     		ldr	r3, .L109
 158 0056 1B68     		ldr	r3, [r3]
 159 0058 9B03     		lsls	r3, r3, #14
 160 005a 03D5     		bpl	.L5
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 161              		.loc 1 287 0 is_stmt 0 discriminator 1
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 9


 162 005c 6368     		ldr	r3, [r4, #4]
 163 005e 002B     		cmp	r3, #0
 164 0060 00D1     		bne	.LCB120
 165 0062 39E2     		b	.L94	@long jump
 166              	.LCB120:
 167              	.LVL2:
 168              	.L5:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 169              		.loc 1 330 0 is_stmt 1
 170 0064 2368     		ldr	r3, [r4]
 171 0066 9B07     		lsls	r3, r3, #30
 172 0068 78D5     		bpl	.L18
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 173              		.loc 1 337 0
 174 006a 9C4B     		ldr	r3, .L109
 175 006c 5B68     		ldr	r3, [r3, #4]
 176 006e 0C22     		movs	r2, #12
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 10


 177 0070 1A42     		tst	r2, r3
 178 0072 62D0     		beq	.L19
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 179              		.loc 1 338 0
 180 0074 994B     		ldr	r3, .L109
 181 0076 5A68     		ldr	r2, [r3, #4]
 182 0078 0C23     		movs	r3, #12
 183 007a 1340     		ands	r3, r2
 184 007c 082B     		cmp	r3, #8
 185 007e 53D0     		beq	.L95
 186              	.L20:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 187              		.loc 1 355 0
 188 0080 E368     		ldr	r3, [r4, #12]
 189 0082 002B     		cmp	r3, #0
 190 0084 00D1     		bne	.LCB146
 191 0086 8BE0     		b	.L22	@long jump
 192              	.LCB146:
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 193              		.loc 1 358 0
 194 0088 944A     		ldr	r2, .L109
 195 008a 1368     		ldr	r3, [r2]
 196 008c 0121     		movs	r1, #1
 197 008e 0B43     		orrs	r3, r1
 198 0090 1360     		str	r3, [r2]
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 199              		.loc 1 361 0
 200 0092 FFF7FEFF 		bl	HAL_GetTick
 201              	.LVL3:
 202 0096 0500     		movs	r5, r0
 203              	.LVL4:
 204              	.L23:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 205              		.loc 1 364 0
 206 0098 904B     		ldr	r3, .L109
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 11


 207 009a 1B68     		ldr	r3, [r3]
 208 009c 9B07     		lsls	r3, r3, #30
 209 009e 76D4     		bmi	.L96
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 210              		.loc 1 366 0
 211 00a0 FFF7FEFF 		bl	HAL_GetTick
 212              	.LVL5:
 213 00a4 401B     		subs	r0, r0, r5
 214 00a6 0228     		cmp	r0, #2
 215 00a8 F6D9     		bls	.L23
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 216              		.loc 1 368 0
 217 00aa 0320     		movs	r0, #3
 218 00ac 17E2     		b	.L8
 219              	.LVL6:
 220              	.L93:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 221              		.loc 1 295 0 discriminator 1
 222 00ae 8B4A     		ldr	r2, .L109
 223 00b0 1168     		ldr	r1, [r2]
 224 00b2 8023     		movs	r3, #128
 225 00b4 5B02     		lsls	r3, r3, #9
 226 00b6 0B43     		orrs	r3, r1
 227 00b8 1360     		str	r3, [r2]
 228              	.L10:
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 229              		.loc 1 299 0
 230 00ba 6368     		ldr	r3, [r4, #4]
 231 00bc 002B     		cmp	r3, #0
 232 00be 25D0     		beq	.L13
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 233              		.loc 1 302 0
 234 00c0 FFF7FEFF 		bl	HAL_GetTick
 235              	.LVL7:
 236 00c4 0500     		movs	r5, r0
 237              	.LVL8:
 238              	.L14:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 239              		.loc 1 305 0
 240 00c6 854B     		ldr	r3, .L109
 241 00c8 1B68     		ldr	r3, [r3]
 242 00ca 9B03     		lsls	r3, r3, #14
 243 00cc CAD4     		bmi	.L5
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 244              		.loc 1 307 0
 245 00ce FFF7FEFF 		bl	HAL_GetTick
 246              	.LVL9:
 247 00d2 401B     		subs	r0, r0, r5
 248 00d4 6428     		cmp	r0, #100
 249 00d6 F6D9     		bls	.L14
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 250              		.loc 1 309 0
 251 00d8 0320     		movs	r0, #3
 252 00da 00E2     		b	.L8
 253              	.LVL10:
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 12


 254              	.L11:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 255              		.loc 1 295 0 discriminator 4
 256 00dc 052B     		cmp	r3, #5
 257 00de 09D0     		beq	.L97
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 258              		.loc 1 295 0 is_stmt 0 discriminator 6
 259 00e0 7E4B     		ldr	r3, .L109
 260 00e2 1A68     		ldr	r2, [r3]
 261 00e4 7E49     		ldr	r1, .L109+4
 262 00e6 0A40     		ands	r2, r1
 263 00e8 1A60     		str	r2, [r3]
 264 00ea 1A68     		ldr	r2, [r3]
 265 00ec 7D49     		ldr	r1, .L109+8
 266 00ee 0A40     		ands	r2, r1
 267 00f0 1A60     		str	r2, [r3]
 268 00f2 E2E7     		b	.L10
 269              	.L97:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 270              		.loc 1 295 0 discriminator 5
 271 00f4 794B     		ldr	r3, .L109
 272 00f6 1968     		ldr	r1, [r3]
 273 00f8 8022     		movs	r2, #128
 274 00fa D202     		lsls	r2, r2, #11
 275 00fc 0A43     		orrs	r2, r1
 276 00fe 1A60     		str	r2, [r3]
 277 0100 1968     		ldr	r1, [r3]
 278 0102 8022     		movs	r2, #128
 279 0104 5202     		lsls	r2, r2, #9
 280 0106 0A43     		orrs	r2, r1
 281 0108 1A60     		str	r2, [r3]
 282 010a D6E7     		b	.L10
 283              	.L13:
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 284              		.loc 1 316 0 is_stmt 1
 285 010c FFF7FEFF 		bl	HAL_GetTick
 286              	.LVL11:
 287 0110 0500     		movs	r5, r0
 288              	.LVL12:
 289              	.L16:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 290              		.loc 1 319 0
 291 0112 724B     		ldr	r3, .L109
 292 0114 1B68     		ldr	r3, [r3]
 293 0116 9B03     		lsls	r3, r3, #14
 294 0118 A4D5     		bpl	.L5
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 295              		.loc 1 321 0
 296 011a FFF7FEFF 		bl	HAL_GetTick
 297              	.LVL13:
 298 011e 401B     		subs	r0, r0, r5
 299 0120 6428     		cmp	r0, #100
 300 0122 F6D9     		bls	.L16
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 301              		.loc 1 323 0
 302 0124 0320     		movs	r0, #3
 303 0126 DAE1     		b	.L8
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 13


 304              	.LVL14:
 305              	.L95:
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 306              		.loc 1 338 0 discriminator 1
 307 0128 6C4B     		ldr	r3, .L109
 308 012a 5B68     		ldr	r3, [r3, #4]
 309 012c C022     		movs	r2, #192
 310 012e 5202     		lsls	r2, r2, #9
 311 0130 1340     		ands	r3, r2
 312 0132 8022     		movs	r2, #128
 313 0134 1202     		lsls	r2, r2, #8
 314 0136 9342     		cmp	r3, r2
 315 0138 A2D1     		bne	.L20
 316              	.L19:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 317              		.loc 1 341 0
 318 013a 684B     		ldr	r3, .L109
 319 013c 1B68     		ldr	r3, [r3]
 320 013e 9B07     		lsls	r3, r3, #30
 321 0140 04D5     		bpl	.L21
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 322              		.loc 1 341 0 is_stmt 0 discriminator 1
 323 0142 E368     		ldr	r3, [r4, #12]
 324 0144 012B     		cmp	r3, #1
 325 0146 01D0     		beq	.L21
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 326              		.loc 1 343 0 is_stmt 1
 327 0148 0120     		movs	r0, #1
 328 014a C8E1     		b	.L8
 329              	.L21:
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 330              		.loc 1 349 0
 331 014c 6349     		ldr	r1, .L109
 332 014e 0B68     		ldr	r3, [r1]
 333 0150 F822     		movs	r2, #248
 334 0152 9343     		bics	r3, r2
 335 0154 2269     		ldr	r2, [r4, #16]
 336 0156 D200     		lsls	r2, r2, #3
 337 0158 1343     		orrs	r3, r2
 338 015a 0B60     		str	r3, [r1]
 339              	.L18:
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 14


 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 340              		.loc 1 395 0
 341 015c 2368     		ldr	r3, [r4]
 342 015e 1B07     		lsls	r3, r3, #28
 343 0160 44D5     		bpl	.L27
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 344              		.loc 1 401 0
 345 0162 E369     		ldr	r3, [r4, #28]
 346 0164 002B     		cmp	r3, #0
 347 0166 2ED0     		beq	.L28
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 348              		.loc 1 404 0
 349 0168 5C4A     		ldr	r2, .L109
 350 016a 536A     		ldr	r3, [r2, #36]
 351 016c 0121     		movs	r1, #1
 352 016e 0B43     		orrs	r3, r1
 353 0170 5362     		str	r3, [r2, #36]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 354              		.loc 1 407 0
 355 0172 FFF7FEFF 		bl	HAL_GetTick
 356              	.LVL15:
 357 0176 0500     		movs	r5, r0
 358              	.LVL16:
 359              	.L29:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 360              		.loc 1 410 0
 361 0178 584B     		ldr	r3, .L109
 362 017a 5B6A     		ldr	r3, [r3, #36]
 363 017c 9B07     		lsls	r3, r3, #30
 364 017e 35D4     		bmi	.L27
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 365              		.loc 1 412 0
 366 0180 FFF7FEFF 		bl	HAL_GetTick
 367              	.LVL17:
 368 0184 401B     		subs	r0, r0, r5
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 15


 369 0186 0228     		cmp	r0, #2
 370 0188 F6D9     		bls	.L29
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 371              		.loc 1 414 0
 372 018a 0320     		movs	r0, #3
 373 018c A7E1     		b	.L8
 374              	.L96:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 375              		.loc 1 373 0
 376 018e 5349     		ldr	r1, .L109
 377 0190 0B68     		ldr	r3, [r1]
 378 0192 F822     		movs	r2, #248
 379 0194 9343     		bics	r3, r2
 380 0196 2269     		ldr	r2, [r4, #16]
 381 0198 D200     		lsls	r2, r2, #3
 382 019a 1343     		orrs	r3, r2
 383 019c 0B60     		str	r3, [r1]
 384 019e DDE7     		b	.L18
 385              	.LVL18:
 386              	.L22:
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 387              		.loc 1 378 0
 388 01a0 4E4A     		ldr	r2, .L109
 389 01a2 1368     		ldr	r3, [r2]
 390 01a4 0121     		movs	r1, #1
 391 01a6 8B43     		bics	r3, r1
 392 01a8 1360     		str	r3, [r2]
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 393              		.loc 1 381 0
 394 01aa FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL19:
 396 01ae 0500     		movs	r5, r0
 397              	.LVL20:
 398              	.L25:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 399              		.loc 1 384 0
 400 01b0 4A4B     		ldr	r3, .L109
 401 01b2 1B68     		ldr	r3, [r3]
 402 01b4 9B07     		lsls	r3, r3, #30
 403 01b6 D1D5     		bpl	.L18
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 404              		.loc 1 386 0
 405 01b8 FFF7FEFF 		bl	HAL_GetTick
 406              	.LVL21:
 407 01bc 401B     		subs	r0, r0, r5
 408 01be 0228     		cmp	r0, #2
 409 01c0 F6D9     		bls	.L25
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 410              		.loc 1 388 0
 411 01c2 0320     		movs	r0, #3
 412 01c4 8BE1     		b	.L8
 413              	.LVL22:
 414              	.L28:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 16


 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 415              		.loc 1 421 0
 416 01c6 454A     		ldr	r2, .L109
 417 01c8 536A     		ldr	r3, [r2, #36]
 418 01ca 0121     		movs	r1, #1
 419 01cc 8B43     		bics	r3, r1
 420 01ce 5362     		str	r3, [r2, #36]
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 421              		.loc 1 424 0
 422 01d0 FFF7FEFF 		bl	HAL_GetTick
 423              	.LVL23:
 424 01d4 0500     		movs	r5, r0
 425              	.LVL24:
 426              	.L31:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 427              		.loc 1 427 0
 428 01d6 414B     		ldr	r3, .L109
 429 01d8 5B6A     		ldr	r3, [r3, #36]
 430 01da 9B07     		lsls	r3, r3, #30
 431 01dc 06D5     		bpl	.L27
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 432              		.loc 1 429 0
 433 01de FFF7FEFF 		bl	HAL_GetTick
 434              	.LVL25:
 435 01e2 401B     		subs	r0, r0, r5
 436 01e4 0228     		cmp	r0, #2
 437 01e6 F6D9     		bls	.L31
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 438              		.loc 1 431 0
 439 01e8 0320     		movs	r0, #3
 440 01ea 78E1     		b	.L8
 441              	.LVL26:
 442              	.L27:
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 443              		.loc 1 437 0
 444 01ec 2368     		ldr	r3, [r4]
 445 01ee 5B07     		lsls	r3, r3, #29
 446 01f0 00D4     		bmi	.LCB429
 447 01f2 7FE0     		b	.L33	@long jump
 448              	.LCB429:
 449              	.LVL27:
 450              	.LBB2:
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 17


 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 451              		.loc 1 446 0
 452 01f4 394B     		ldr	r3, .L109
 453 01f6 DB69     		ldr	r3, [r3, #28]
 454 01f8 DB00     		lsls	r3, r3, #3
 455 01fa 1DD4     		bmi	.L78
 456              	.LBB3:
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 457              		.loc 1 448 0
 458 01fc 374A     		ldr	r2, .L109
 459 01fe D169     		ldr	r1, [r2, #28]
 460 0200 8020     		movs	r0, #128
 461 0202 4005     		lsls	r0, r0, #21
 462 0204 0143     		orrs	r1, r0
 463 0206 D161     		str	r1, [r2, #28]
 464 0208 D369     		ldr	r3, [r2, #28]
 465 020a 0340     		ands	r3, r0
 466 020c 0193     		str	r3, [sp, #4]
 467 020e 019B     		ldr	r3, [sp, #4]
 468              	.LVL28:
 469              	.LBE3:
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 470              		.loc 1 449 0
 471 0210 0125     		movs	r5, #1
 472              	.LVL29:
 473              	.L34:
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 474              		.loc 1 452 0
 475 0212 354B     		ldr	r3, .L109+12
 476 0214 1B68     		ldr	r3, [r3]
 477 0216 DB05     		lsls	r3, r3, #23
 478 0218 10D5     		bpl	.L98
 479              	.L35:
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 18


 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 480              		.loc 1 470 0
 481 021a A368     		ldr	r3, [r4, #8]
 482 021c 012B     		cmp	r3, #1
 483 021e 21D0     		beq	.L99
 484              		.loc 1 470 0 is_stmt 0 discriminator 2
 485 0220 002B     		cmp	r3, #0
 486 0222 36D1     		bne	.L40
 487              		.loc 1 470 0 discriminator 3
 488 0224 2D4B     		ldr	r3, .L109
 489 0226 1A6A     		ldr	r2, [r3, #32]
 490 0228 0121     		movs	r1, #1
 491 022a 8A43     		bics	r2, r1
 492 022c 1A62     		str	r2, [r3, #32]
 493 022e 1A6A     		ldr	r2, [r3, #32]
 494 0230 0331     		adds	r1, r1, #3
 495 0232 8A43     		bics	r2, r1
 496 0234 1A62     		str	r2, [r3, #32]
 497 0236 1AE0     		b	.L39
 498              	.LVL30:
 499              	.L78:
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 500              		.loc 1 439 0 is_stmt 1
 501 0238 0025     		movs	r5, #0
 502 023a EAE7     		b	.L34
 503              	.LVL31:
 504              	.L98:
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 505              		.loc 1 455 0
 506 023c 2A4A     		ldr	r2, .L109+12
 507 023e 1168     		ldr	r1, [r2]
 508 0240 8023     		movs	r3, #128
 509 0242 5B00     		lsls	r3, r3, #1
 510 0244 0B43     		orrs	r3, r1
 511 0246 1360     		str	r3, [r2]
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 512              		.loc 1 458 0
 513 0248 FFF7FEFF 		bl	HAL_GetTick
 514              	.LVL32:
 515 024c 0600     		movs	r6, r0
 516              	.LVL33:
 517              	.L36:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 518              		.loc 1 460 0
 519 024e 264B     		ldr	r3, .L109+12
 520 0250 1B68     		ldr	r3, [r3]
 521 0252 DB05     		lsls	r3, r3, #23
 522 0254 E1D4     		bmi	.L35
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 523              		.loc 1 462 0
 524 0256 FFF7FEFF 		bl	HAL_GetTick
 525              	.LVL34:
 526 025a 801B     		subs	r0, r0, r6
 527 025c 6428     		cmp	r0, #100
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 19


 528 025e F6D9     		bls	.L36
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 529              		.loc 1 464 0
 530 0260 0320     		movs	r0, #3
 531 0262 3CE1     		b	.L8
 532              	.LVL35:
 533              	.L99:
 534              		.loc 1 470 0 discriminator 1
 535 0264 1D4A     		ldr	r2, .L109
 536 0266 136A     		ldr	r3, [r2, #32]
 537 0268 0121     		movs	r1, #1
 538 026a 0B43     		orrs	r3, r1
 539 026c 1362     		str	r3, [r2, #32]
 540              	.L39:
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 541              		.loc 1 472 0
 542 026e A368     		ldr	r3, [r4, #8]
 543 0270 002B     		cmp	r3, #0
 544 0272 24D0     		beq	.L42
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 545              		.loc 1 475 0
 546 0274 FFF7FEFF 		bl	HAL_GetTick
 547              	.LVL36:
 548 0278 0600     		movs	r6, r0
 549              	.LVL37:
 550              	.L43:
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 551              		.loc 1 478 0
 552 027a 184B     		ldr	r3, .L109
 553 027c 1B6A     		ldr	r3, [r3, #32]
 554 027e 9B07     		lsls	r3, r3, #30
 555 0280 36D4     		bmi	.L45
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 556              		.loc 1 480 0
 557 0282 FFF7FEFF 		bl	HAL_GetTick
 558              	.LVL38:
 559 0286 801B     		subs	r0, r0, r6
 560 0288 184B     		ldr	r3, .L109+16
 561 028a 9842     		cmp	r0, r3
 562 028c F5D9     		bls	.L43
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 563              		.loc 1 482 0
 564 028e 0320     		movs	r0, #3
 565 0290 25E1     		b	.L8
 566              	.LVL39:
 567              	.L40:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 568              		.loc 1 470 0 discriminator 4
 569 0292 052B     		cmp	r3, #5
 570 0294 09D0     		beq	.L100
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 20


 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 571              		.loc 1 470 0 is_stmt 0 discriminator 6
 572 0296 114B     		ldr	r3, .L109
 573 0298 1A6A     		ldr	r2, [r3, #32]
 574 029a 0121     		movs	r1, #1
 575 029c 8A43     		bics	r2, r1
 576 029e 1A62     		str	r2, [r3, #32]
 577 02a0 1A6A     		ldr	r2, [r3, #32]
 578 02a2 0331     		adds	r1, r1, #3
 579 02a4 8A43     		bics	r2, r1
 580 02a6 1A62     		str	r2, [r3, #32]
 581 02a8 E1E7     		b	.L39
 582              	.L100:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 583              		.loc 1 470 0 discriminator 5
 584 02aa 0C4B     		ldr	r3, .L109
 585 02ac 1A6A     		ldr	r2, [r3, #32]
 586 02ae 0421     		movs	r1, #4
 587 02b0 0A43     		orrs	r2, r1
 588 02b2 1A62     		str	r2, [r3, #32]
 589 02b4 1A6A     		ldr	r2, [r3, #32]
 590 02b6 0339     		subs	r1, r1, #3
 591 02b8 0A43     		orrs	r2, r1
 592 02ba 1A62     		str	r2, [r3, #32]
 593 02bc D7E7     		b	.L39
 594              	.L42:
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 595              		.loc 1 489 0 is_stmt 1
 596 02be FFF7FEFF 		bl	HAL_GetTick
 597              	.LVL40:
 598 02c2 0600     		movs	r6, r0
 599              	.LVL41:
 600              	.L46:
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 601              		.loc 1 492 0
 602 02c4 054B     		ldr	r3, .L109
 603 02c6 1B6A     		ldr	r3, [r3, #32]
 604 02c8 9B07     		lsls	r3, r3, #30
 605 02ca 11D5     		bpl	.L45
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 606              		.loc 1 494 0
 607 02cc FFF7FEFF 		bl	HAL_GetTick
 608              	.LVL42:
 609 02d0 801B     		subs	r0, r0, r6
 610 02d2 064B     		ldr	r3, .L109+16
 611 02d4 9842     		cmp	r0, r3
 612 02d6 F5D9     		bls	.L46
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 21


 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 613              		.loc 1 496 0
 614 02d8 0320     		movs	r0, #3
 615 02da 00E1     		b	.L8
 616              	.L110:
 617              		.align	2
 618              	.L109:
 619 02dc 00100240 		.word	1073876992
 620 02e0 FFFFFEFF 		.word	-65537
 621 02e4 FFFFFBFF 		.word	-262145
 622 02e8 00700040 		.word	1073770496
 623 02ec 88130000 		.word	5000
 624              	.L45:
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 625              		.loc 1 502 0
 626 02f0 012D     		cmp	r5, #1
 627 02f2 3AD0     		beq	.L101
 628              	.LVL43:
 629              	.L33:
 630              	.LBE2:
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 631              		.loc 1 509 0
 632 02f4 2368     		ldr	r3, [r4]
 633 02f6 DB06     		lsls	r3, r3, #27
 634 02f8 10D5     		bpl	.L48
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 635              		.loc 1 516 0
 636 02fa 6369     		ldr	r3, [r4, #20]
 637 02fc 012B     		cmp	r3, #1
 638 02fe 3AD0     		beq	.L102
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 22


 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 639              		.loc 1 539 0
 640 0300 0533     		adds	r3, r3, #5
 641 0302 58D1     		bne	.L52
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 642              		.loc 1 542 0
 643 0304 784A     		ldr	r2, .L111
 644 0306 536B     		ldr	r3, [r2, #52]
 645 0308 0421     		movs	r1, #4
 646 030a 8B43     		bics	r3, r1
 647 030c 5363     		str	r3, [r2, #52]
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 648              		.loc 1 545 0
 649 030e 536B     		ldr	r3, [r2, #52]
 650 0310 F431     		adds	r1, r1, #244
 651 0312 8B43     		bics	r3, r1
 652 0314 A169     		ldr	r1, [r4, #24]
 653 0316 C900     		lsls	r1, r1, #3
 654 0318 0B43     		orrs	r3, r1
 655 031a 5363     		str	r3, [r2, #52]
 656              	.L48:
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 23


 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 657              		.loc 1 571 0
 658 031c 2368     		ldr	r3, [r4]
 659 031e 9B06     		lsls	r3, r3, #26
 660 0320 00D4     		bmi	.LCB659
 661 0322 82E0     		b	.L55	@long jump
 662              	.LCB659:
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 663              		.loc 1 577 0
 664 0324 704B     		ldr	r3, .L111
 665 0326 5A68     		ldr	r2, [r3, #4]
 666 0328 0C23     		movs	r3, #12
 667 032a 1340     		ands	r3, r2
 668 032c 0C2B     		cmp	r3, #12
 669 032e 60D0     		beq	.L56
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 670              		.loc 1 578 0 discriminator 1
 671 0330 6D4B     		ldr	r3, .L111
 672 0332 5A68     		ldr	r2, [r3, #4]
 673 0334 0C23     		movs	r3, #12
 674 0336 1340     		ands	r3, r2
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 675              		.loc 1 577 0 discriminator 1
 676 0338 082B     		cmp	r3, #8
 677 033a 53D0     		beq	.L103
 678              	.L57:
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 679              		.loc 1 588 0
 680 033c 236A     		ldr	r3, [r4, #32]
 681 033e 002B     		cmp	r3, #0
 682 0340 60D0     		beq	.L58
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 683              		.loc 1 591 0
 684 0342 694A     		ldr	r2, .L111
 685 0344 516B     		ldr	r1, [r2, #52]
 686 0346 8023     		movs	r3, #128
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 24


 687 0348 5B02     		lsls	r3, r3, #9
 688 034a 0B43     		orrs	r3, r1
 689 034c 5363     		str	r3, [r2, #52]
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 690              		.loc 1 594 0
 691 034e FFF7FEFF 		bl	HAL_GetTick
 692              	.LVL44:
 693 0352 0500     		movs	r5, r0
 694              	.LVL45:
 695              	.L59:
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 696              		.loc 1 597 0
 697 0354 644B     		ldr	r3, .L111
 698 0356 5B6B     		ldr	r3, [r3, #52]
 699 0358 DB03     		lsls	r3, r3, #15
 700 035a 66D4     		bmi	.L55
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 701              		.loc 1 599 0
 702 035c FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL46:
 704 0360 401B     		subs	r0, r0, r5
 705 0362 0228     		cmp	r0, #2
 706 0364 F6D9     		bls	.L59
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 707              		.loc 1 601 0
 708 0366 0320     		movs	r0, #3
 709 0368 B9E0     		b	.L8
 710              	.LVL47:
 711              	.L101:
 712              	.LBB4:
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 713              		.loc 1 504 0
 714 036a 5F4A     		ldr	r2, .L111
 715 036c D369     		ldr	r3, [r2, #28]
 716 036e 5F49     		ldr	r1, .L111+4
 717 0370 0B40     		ands	r3, r1
 718 0372 D361     		str	r3, [r2, #28]
 719 0374 BEE7     		b	.L33
 720              	.LVL48:
 721              	.L102:
 722              	.LBE4:
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 723              		.loc 1 519 0
 724 0376 5C4B     		ldr	r3, .L111
 725 0378 5A6B     		ldr	r2, [r3, #52]
 726 037a 0421     		movs	r1, #4
 727 037c 0A43     		orrs	r2, r1
 728 037e 5A63     		str	r2, [r3, #52]
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 729              		.loc 1 522 0
 730 0380 5A6B     		ldr	r2, [r3, #52]
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 25


 731 0382 0339     		subs	r1, r1, #3
 732 0384 0A43     		orrs	r2, r1
 733 0386 5A63     		str	r2, [r3, #52]
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 734              		.loc 1 525 0
 735 0388 FFF7FEFF 		bl	HAL_GetTick
 736              	.LVL49:
 737 038c 0500     		movs	r5, r0
 738              	.LVL50:
 739              	.L50:
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 740              		.loc 1 528 0
 741 038e 564B     		ldr	r3, .L111
 742 0390 5B6B     		ldr	r3, [r3, #52]
 743 0392 9B07     		lsls	r3, r3, #30
 744 0394 06D4     		bmi	.L104
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 745              		.loc 1 530 0
 746 0396 FFF7FEFF 		bl	HAL_GetTick
 747              	.LVL51:
 748 039a 401B     		subs	r0, r0, r5
 749 039c 0228     		cmp	r0, #2
 750 039e F6D9     		bls	.L50
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 751              		.loc 1 532 0
 752 03a0 0320     		movs	r0, #3
 753 03a2 9CE0     		b	.L8
 754              	.L104:
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 755              		.loc 1 537 0
 756 03a4 5049     		ldr	r1, .L111
 757 03a6 4B6B     		ldr	r3, [r1, #52]
 758 03a8 F822     		movs	r2, #248
 759 03aa 9343     		bics	r3, r2
 760 03ac A269     		ldr	r2, [r4, #24]
 761 03ae D200     		lsls	r2, r2, #3
 762 03b0 1343     		orrs	r3, r2
 763 03b2 4B63     		str	r3, [r1, #52]
 764 03b4 B2E7     		b	.L48
 765              	.LVL52:
 766              	.L52:
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 767              		.loc 1 550 0
 768 03b6 4C4B     		ldr	r3, .L111
 769 03b8 5A6B     		ldr	r2, [r3, #52]
 770 03ba 0421     		movs	r1, #4
 771 03bc 0A43     		orrs	r2, r1
 772 03be 5A63     		str	r2, [r3, #52]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 773              		.loc 1 553 0
 774 03c0 5A6B     		ldr	r2, [r3, #52]
 775 03c2 0339     		subs	r1, r1, #3
 776 03c4 8A43     		bics	r2, r1
 777 03c6 5A63     		str	r2, [r3, #52]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 778              		.loc 1 556 0
 779 03c8 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 26


 780              	.LVL53:
 781 03cc 0500     		movs	r5, r0
 782              	.LVL54:
 783              	.L53:
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 784              		.loc 1 559 0
 785 03ce 464B     		ldr	r3, .L111
 786 03d0 5B6B     		ldr	r3, [r3, #52]
 787 03d2 9B07     		lsls	r3, r3, #30
 788 03d4 A2D5     		bpl	.L48
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 789              		.loc 1 561 0
 790 03d6 FFF7FEFF 		bl	HAL_GetTick
 791              	.LVL55:
 792 03da 401B     		subs	r0, r0, r5
 793 03dc 0228     		cmp	r0, #2
 794 03de F6D9     		bls	.L53
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 795              		.loc 1 563 0
 796 03e0 0320     		movs	r0, #3
 797 03e2 7CE0     		b	.L8
 798              	.LVL56:
 799              	.L103:
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 800              		.loc 1 578 0
 801 03e4 404B     		ldr	r3, .L111
 802 03e6 5B68     		ldr	r3, [r3, #4]
 803 03e8 C022     		movs	r2, #192
 804 03ea 5202     		lsls	r2, r2, #9
 805 03ec 1340     		ands	r3, r2
 806 03ee 9342     		cmp	r3, r2
 807 03f0 A4D1     		bne	.L57
 808              	.L56:
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 809              		.loc 1 580 0
 810 03f2 3D4B     		ldr	r3, .L111
 811 03f4 5B6B     		ldr	r3, [r3, #52]
 812 03f6 DB03     		lsls	r3, r3, #15
 813 03f8 17D5     		bpl	.L55
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 814              		.loc 1 580 0 is_stmt 0 discriminator 1
 815 03fa 236A     		ldr	r3, [r4, #32]
 816 03fc 012B     		cmp	r3, #1
 817 03fe 14D0     		beq	.L55
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 818              		.loc 1 582 0 is_stmt 1
 819 0400 0120     		movs	r0, #1
 820 0402 6CE0     		b	.L8
 821              	.L58:
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 822              		.loc 1 608 0
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 27


 823 0404 384A     		ldr	r2, .L111
 824 0406 536B     		ldr	r3, [r2, #52]
 825 0408 3949     		ldr	r1, .L111+8
 826 040a 0B40     		ands	r3, r1
 827 040c 5363     		str	r3, [r2, #52]
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 828              		.loc 1 611 0
 829 040e FFF7FEFF 		bl	HAL_GetTick
 830              	.LVL57:
 831 0412 0500     		movs	r5, r0
 832              	.LVL58:
 833              	.L61:
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 834              		.loc 1 614 0
 835 0414 344B     		ldr	r3, .L111
 836 0416 5B6B     		ldr	r3, [r3, #52]
 837 0418 DB03     		lsls	r3, r3, #15
 838 041a 06D5     		bpl	.L55
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 839              		.loc 1 616 0
 840 041c FFF7FEFF 		bl	HAL_GetTick
 841              	.LVL59:
 842 0420 401B     		subs	r0, r0, r5
 843 0422 0228     		cmp	r0, #2
 844 0424 F6D9     		bls	.L61
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 845              		.loc 1 618 0
 846 0426 0320     		movs	r0, #3
 847 0428 59E0     		b	.L8
 848              	.LVL60:
 849              	.L55:
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 850              		.loc 1 629 0
 851 042a 636A     		ldr	r3, [r4, #36]
 852 042c 002B     		cmp	r3, #0
 853 042e 55D0     		beq	.L87
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 854              		.loc 1 632 0
 855 0430 2D4A     		ldr	r2, .L111
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 28


 856 0432 5168     		ldr	r1, [r2, #4]
 857 0434 0C22     		movs	r2, #12
 858 0436 0A40     		ands	r2, r1
 859 0438 082A     		cmp	r2, #8
 860 043a 52D0     		beq	.L88
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 861              		.loc 1 634 0
 862 043c 022B     		cmp	r3, #2
 863 043e 12D0     		beq	.L105
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 864              		.loc 1 678 0
 865 0440 294A     		ldr	r2, .L111
 866 0442 1368     		ldr	r3, [r2]
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 29


 867 0444 2B49     		ldr	r1, .L111+12
 868 0446 0B40     		ands	r3, r1
 869 0448 1360     		str	r3, [r2]
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 870              		.loc 1 681 0
 871 044a FFF7FEFF 		bl	HAL_GetTick
 872              	.LVL61:
 873 044e 0400     		movs	r4, r0
 874              	.LVL62:
 875              	.L68:
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 876              		.loc 1 684 0
 877 0450 254B     		ldr	r3, .L111
 878 0452 1B68     		ldr	r3, [r3]
 879 0454 9B01     		lsls	r3, r3, #6
 880 0456 3DD5     		bpl	.L106
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 881              		.loc 1 686 0
 882 0458 FFF7FEFF 		bl	HAL_GetTick
 883              	.LVL63:
 884 045c 001B     		subs	r0, r0, r4
 885 045e 0228     		cmp	r0, #2
 886 0460 F6D9     		bls	.L68
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 887              		.loc 1 688 0
 888 0462 0320     		movs	r0, #3
 889 0464 3BE0     		b	.L8
 890              	.LVL64:
 891              	.L105:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 892              		.loc 1 642 0
 893 0466 204A     		ldr	r2, .L111
 894 0468 1368     		ldr	r3, [r2]
 895 046a 2249     		ldr	r1, .L111+12
 896 046c 0B40     		ands	r3, r1
 897 046e 1360     		str	r3, [r2]
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 898              		.loc 1 645 0
 899 0470 FFF7FEFF 		bl	HAL_GetTick
 900              	.LVL65:
 901 0474 0500     		movs	r5, r0
 902              	.LVL66:
 903              	.L64:
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 904              		.loc 1 648 0
 905 0476 1C4B     		ldr	r3, .L111
 906 0478 1B68     		ldr	r3, [r3]
 907 047a 9B01     		lsls	r3, r3, #6
 908 047c 06D5     		bpl	.L107
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 909              		.loc 1 650 0
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 30


 910 047e FFF7FEFF 		bl	HAL_GetTick
 911              	.LVL67:
 912 0482 401B     		subs	r0, r0, r5
 913 0484 0228     		cmp	r0, #2
 914 0486 F6D9     		bls	.L64
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 915              		.loc 1 652 0
 916 0488 0320     		movs	r0, #3
 917 048a 28E0     		b	.L8
 918              	.L107:
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 919              		.loc 1 657 0
 920 048c 164B     		ldr	r3, .L111
 921 048e DA6A     		ldr	r2, [r3, #44]
 922 0490 0F21     		movs	r1, #15
 923 0492 8A43     		bics	r2, r1
 924 0494 216B     		ldr	r1, [r4, #48]
 925 0496 0A43     		orrs	r2, r1
 926 0498 DA62     		str	r2, [r3, #44]
 927 049a 5A68     		ldr	r2, [r3, #4]
 928 049c 1649     		ldr	r1, .L111+16
 929 049e 0A40     		ands	r2, r1
 930 04a0 E16A     		ldr	r1, [r4, #44]
 931 04a2 A06A     		ldr	r0, [r4, #40]
 932 04a4 0143     		orrs	r1, r0
 933 04a6 0A43     		orrs	r2, r1
 934 04a8 5A60     		str	r2, [r3, #4]
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 935              		.loc 1 661 0
 936 04aa 1968     		ldr	r1, [r3]
 937 04ac 8022     		movs	r2, #128
 938 04ae 5204     		lsls	r2, r2, #17
 939 04b0 0A43     		orrs	r2, r1
 940 04b2 1A60     		str	r2, [r3]
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 941              		.loc 1 664 0
 942 04b4 FFF7FEFF 		bl	HAL_GetTick
 943              	.LVL68:
 944 04b8 0400     		movs	r4, r0
 945              	.LVL69:
 946              	.L66:
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 947              		.loc 1 667 0
 948 04ba 0B4B     		ldr	r3, .L111
 949 04bc 1B68     		ldr	r3, [r3]
 950 04be 9B01     		lsls	r3, r3, #6
 951 04c0 06D4     		bmi	.L108
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 952              		.loc 1 669 0
 953 04c2 FFF7FEFF 		bl	HAL_GetTick
 954              	.LVL70:
 955 04c6 001B     		subs	r0, r0, r4
 956 04c8 0228     		cmp	r0, #2
 957 04ca F6D9     		bls	.L66
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 958              		.loc 1 671 0
 959 04cc 0320     		movs	r0, #3
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 31


 960 04ce 06E0     		b	.L8
 961              	.L108:
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 962              		.loc 1 699 0
 963 04d0 0020     		movs	r0, #0
 964 04d2 04E0     		b	.L8
 965              	.L106:
 966 04d4 0020     		movs	r0, #0
 967 04d6 02E0     		b	.L8
 968              	.LVL71:
 969              	.L94:
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 970              		.loc 1 289 0
 971 04d8 0120     		movs	r0, #1
 972              	.LVL72:
 973 04da 00E0     		b	.L8
 974              	.LVL73:
 975              	.L87:
 976              		.loc 1 699 0
 977 04dc 0020     		movs	r0, #0
 978              	.LVL74:
 979              	.L8:
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 980              		.loc 1 700 0
 981 04de 02B0     		add	sp, sp, #8
 982              		@ sp needed
 983 04e0 70BD     		pop	{r4, r5, r6, pc}
 984              	.LVL75:
 985              	.L88:
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 986              		.loc 1 695 0
 987 04e2 0120     		movs	r0, #1
 988 04e4 FBE7     		b	.L8
 989              	.L112:
 990 04e6 C046     		.align	2
 991              	.L111:
 992 04e8 00100240 		.word	1073876992
 993 04ec FFFFFFEF 		.word	-268435457
 994 04f0 FFFFFEFF 		.word	-65537
 995 04f4 FFFFFFFE 		.word	-16777217
 996 04f8 FF7FC2FF 		.word	-4030465
 997              		.cfi_endproc
 998              	.LFE38:
 1000              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1001              		.align	1
 1002              		.global	HAL_RCC_MCOConfig
 1003              		.syntax unified
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 32


 1004              		.code	16
 1005              		.thumb_func
 1006              		.fpu softvfp
 1008              	HAL_RCC_MCOConfig:
 1009              	.LFB40:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 33


 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 34


 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }      
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 35


 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 36


 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 37


 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1010              		.loc 1 986 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 24
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL76:
 1015 0000 70B5     		push	{r4, r5, r6, lr}
 1016              	.LCFI2:
 1017              		.cfi_def_cfa_offset 16
 1018              		.cfi_offset 4, -16
 1019              		.cfi_offset 5, -12
 1020              		.cfi_offset 6, -8
 1021              		.cfi_offset 14, -4
 1022 0002 86B0     		sub	sp, sp, #24
 1023              	.LCFI3:
 1024              		.cfi_def_cfa_offset 40
 1025 0004 0D00     		movs	r5, r1
 1026 0006 1600     		movs	r6, r2
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1027              		.loc 1 995 0
 1028 0008 0223     		movs	r3, #2
 1029 000a 0293     		str	r3, [sp, #8]
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1030              		.loc 1 996 0
 1031 000c 0133     		adds	r3, r3, #1
 1032 000e 0493     		str	r3, [sp, #16]
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1033              		.loc 1 997 0
 1034 0010 0023     		movs	r3, #0
 1035 0012 0393     		str	r3, [sp, #12]
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1036              		.loc 1 998 0
 1037 0014 8022     		movs	r2, #128
 1038              	.LVL77:
 1039 0016 5200     		lsls	r2, r2, #1
 1040 0018 0192     		str	r2, [sp, #4]
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1041              		.loc 1 999 0
 1042 001a 0593     		str	r3, [sp, #20]
 1043              	.LBB5:
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1044              		.loc 1 1002 0
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 38


 1045 001c 0B4C     		ldr	r4, .L114
 1046 001e 6269     		ldr	r2, [r4, #20]
 1047 0020 8021     		movs	r1, #128
 1048              	.LVL78:
 1049 0022 8902     		lsls	r1, r1, #10
 1050 0024 0A43     		orrs	r2, r1
 1051 0026 6261     		str	r2, [r4, #20]
 1052 0028 6369     		ldr	r3, [r4, #20]
 1053 002a 0B40     		ands	r3, r1
 1054 002c 0093     		str	r3, [sp]
 1055 002e 009B     		ldr	r3, [sp]
 1056              	.LBE5:
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1057              		.loc 1 1004 0
 1058 0030 9020     		movs	r0, #144
 1059              	.LVL79:
 1060 0032 01A9     		add	r1, sp, #4
 1061 0034 C005     		lsls	r0, r0, #23
 1062 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1063              	.LVL80:
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1064              		.loc 1 1007 0
 1065 003a 6268     		ldr	r2, [r4, #4]
 1066 003c 044B     		ldr	r3, .L114+4
 1067 003e 1A40     		ands	r2, r3
 1068 0040 3543     		orrs	r5, r6
 1069              	.LVL81:
 1070 0042 2A43     		orrs	r2, r5
 1071 0044 6260     		str	r2, [r4, #4]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1072              		.loc 1 1008 0
 1073 0046 06B0     		add	sp, sp, #24
 1074              		@ sp needed
 1075              	.LVL82:
 1076 0048 70BD     		pop	{r4, r5, r6, pc}
 1077              	.L115:
 1078 004a C046     		.align	2
 1079              	.L114:
 1080 004c 00100240 		.word	1073876992
 1081 0050 FFFFFF80 		.word	-2130706433
 1082              		.cfi_endproc
 1083              	.LFE40:
 1085              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1086              		.align	1
 1087              		.global	HAL_RCC_EnableCSS
 1088              		.syntax unified
 1089              		.code	16
 1090              		.thumb_func
 1091              		.fpu softvfp
 1093              	HAL_RCC_EnableCSS:
 1094              	.LFB41:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 39


1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1095              		.loc 1 1020 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              		@ link register save eliminated.
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1100              		.loc 1 1021 0
 1101 0000 034A     		ldr	r2, .L117
 1102 0002 1168     		ldr	r1, [r2]
 1103 0004 8023     		movs	r3, #128
 1104 0006 1B03     		lsls	r3, r3, #12
 1105 0008 0B43     		orrs	r3, r1
 1106 000a 1360     		str	r3, [r2]
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1107              		.loc 1 1022 0
 1108              		@ sp needed
 1109 000c 7047     		bx	lr
 1110              	.L118:
 1111 000e C046     		.align	2
 1112              	.L117:
 1113 0010 00100240 		.word	1073876992
 1114              		.cfi_endproc
 1115              	.LFE41:
 1117              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1118              		.align	1
 1119              		.global	HAL_RCC_DisableCSS
 1120              		.syntax unified
 1121              		.code	16
 1122              		.thumb_func
 1123              		.fpu softvfp
 1125              	HAL_RCC_DisableCSS:
 1126              	.LFB42:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1127              		.loc 1 1029 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              		@ link register save eliminated.
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1132              		.loc 1 1030 0
 1133 0000 024A     		ldr	r2, .L120
 1134 0002 1368     		ldr	r3, [r2]
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 40


 1135 0004 0249     		ldr	r1, .L120+4
 1136 0006 0B40     		ands	r3, r1
 1137 0008 1360     		str	r3, [r2]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1138              		.loc 1 1031 0
 1139              		@ sp needed
 1140 000a 7047     		bx	lr
 1141              	.L121:
 1142              		.align	2
 1143              	.L120:
 1144 000c 00100240 		.word	1073876992
 1145 0010 FFFFF7FF 		.word	-524289
 1146              		.cfi_endproc
 1147              	.LFE42:
 1149              		.global	__aeabi_uidiv
 1150              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1151              		.align	1
 1152              		.global	HAL_RCC_GetSysClockFreq
 1153              		.syntax unified
 1154              		.code	16
 1155              		.thumb_func
 1156              		.fpu softvfp
 1158              	HAL_RCC_GetSysClockFreq:
 1159              	.LFB43:
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 41


1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1160              		.loc 1 1065 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 32
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164 0000 30B5     		push	{r4, r5, lr}
 1165              	.LCFI4:
 1166              		.cfi_def_cfa_offset 12
 1167              		.cfi_offset 4, -12
 1168              		.cfi_offset 5, -8
 1169              		.cfi_offset 14, -4
 1170 0002 89B0     		sub	sp, sp, #36
 1171              	.LCFI5:
 1172              		.cfi_def_cfa_offset 48
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1173              		.loc 1 1066 0
 1174 0004 04AA     		add	r2, sp, #16
 1175 0006 1F4B     		ldr	r3, .L131
 1176 0008 1800     		movs	r0, r3
 1177 000a 32C8     		ldmia	r0!, {r1, r4, r5}
 1178 000c 32C2     		stmia	r2!, {r1, r4, r5}
 1179 000e 1100     		movs	r1, r2
 1180 0010 0268     		ldr	r2, [r0]
 1181 0012 0A60     		str	r2, [r1]
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 1182              		.loc 1 1068 0
 1183 0014 6A46     		mov	r2, sp
 1184 0016 1033     		adds	r3, r3, #16
 1185 0018 13CB     		ldmia	r3!, {r0, r1, r4}
 1186 001a 13C2     		stmia	r2!, {r0, r1, r4}
 1187 001c 1B68     		ldr	r3, [r3]
 1188 001e 1360     		str	r3, [r2]
 1189              	.LVL83:
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1190              		.loc 1 1074 0
 1191 0020 194B     		ldr	r3, .L131+4
 1192 0022 5A68     		ldr	r2, [r3, #4]
 1193              	.LVL84:
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1194              		.loc 1 1077 0
 1195 0024 0C23     		movs	r3, #12
 1196 0026 1340     		ands	r3, r2
 1197 0028 082B     		cmp	r3, #8
 1198 002a 04D0     		beq	.L124
 1199 002c 0C2B     		cmp	r3, #12
 1200 002e 26D0     		beq	.L128
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 42


1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1201              		.loc 1 1081 0
 1202 0030 1648     		ldr	r0, .L131+8
 1203              	.LVL85:
 1204              	.L122:
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI48_VALUE / prediv) * pllmul;
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1U) * pllmul);
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1205              		.loc 1 1128 0
 1206 0032 09B0     		add	sp, sp, #36
 1207              		@ sp needed
 1208 0034 30BD     		pop	{r4, r5, pc}
 1209              	.LVL86:
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 43


 1210              	.L124:
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1211              		.loc 1 1086 0
 1212 0036 910C     		lsrs	r1, r2, #18
 1213 0038 0F23     		movs	r3, #15
 1214 003a 1940     		ands	r1, r3
 1215 003c 04A8     		add	r0, sp, #16
 1216 003e 445C     		ldrb	r4, [r0, r1]
 1217              	.LVL87:
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1218              		.loc 1 1087 0
 1219 0040 1149     		ldr	r1, .L131+4
 1220 0042 C96A     		ldr	r1, [r1, #44]
 1221 0044 0B40     		ands	r3, r1
 1222 0046 6946     		mov	r1, sp
 1223 0048 C95C     		ldrb	r1, [r1, r3]
 1224              	.LVL88:
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1225              		.loc 1 1088 0
 1226 004a C023     		movs	r3, #192
 1227 004c 5B02     		lsls	r3, r3, #9
 1228 004e 1A40     		ands	r2, r3
 1229              	.LVL89:
 1230 0050 8023     		movs	r3, #128
 1231 0052 5B02     		lsls	r3, r3, #9
 1232 0054 9A42     		cmp	r2, r3
 1233 0056 08D0     		beq	.L129
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1234              		.loc 1 1094 0
 1235 0058 C023     		movs	r3, #192
 1236 005a 5B02     		lsls	r3, r3, #9
 1237 005c 9A42     		cmp	r2, r3
 1238 005e 09D0     		beq	.L130
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 1239              		.loc 1 1104 0
 1240 0060 0A48     		ldr	r0, .L131+8
 1241 0062 FFF7FEFF 		bl	__aeabi_uidiv
 1242              	.LVL90:
 1243 0066 6043     		muls	r0, r4
 1244              	.LVL91:
 1245 0068 E3E7     		b	.L122
 1246              	.LVL92:
 1247              	.L129:
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1248              		.loc 1 1091 0
 1249 006a 0848     		ldr	r0, .L131+8
 1250 006c FFF7FEFF 		bl	__aeabi_uidiv
 1251              	.LVL93:
 1252 0070 6043     		muls	r0, r4
 1253              	.LVL94:
 1254 0072 DEE7     		b	.L122
 1255              	.LVL95:
 1256              	.L130:
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1257              		.loc 1 1097 0
 1258 0074 0648     		ldr	r0, .L131+12
 1259 0076 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 44


 1260              	.LVL96:
 1261 007a 6043     		muls	r0, r4
 1262              	.LVL97:
 1263 007c D9E7     		b	.L122
 1264              	.LVL98:
 1265              	.L128:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1266              		.loc 1 1116 0
 1267 007e 0448     		ldr	r0, .L131+12
 1268              	.LVL99:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1269              		.loc 1 1127 0
 1270 0080 D7E7     		b	.L122
 1271              	.L132:
 1272 0082 C046     		.align	2
 1273              	.L131:
 1274 0084 00000000 		.word	.LANCHOR0
 1275 0088 00100240 		.word	1073876992
 1276 008c 00127A00 		.word	8000000
 1277 0090 006CDC02 		.word	48000000
 1278              		.cfi_endproc
 1279              	.LFE43:
 1281              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1282              		.align	1
 1283              		.global	HAL_RCC_ClockConfig
 1284              		.syntax unified
 1285              		.code	16
 1286              		.thumb_func
 1287              		.fpu softvfp
 1289              	HAL_RCC_ClockConfig:
 1290              	.LFB39:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1291              		.loc 1 726 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL100:
 1296 0000 70B5     		push	{r4, r5, r6, lr}
 1297              	.LCFI6:
 1298              		.cfi_def_cfa_offset 16
 1299              		.cfi_offset 4, -16
 1300              		.cfi_offset 5, -12
 1301              		.cfi_offset 6, -8
 1302              		.cfi_offset 14, -4
 1303 0002 0500     		movs	r5, r0
 1304 0004 0C00     		movs	r4, r1
 1305              	.LVL101:
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1306              		.loc 1 739 0
 1307 0006 594B     		ldr	r3, .L170
 1308 0008 1A68     		ldr	r2, [r3]
 1309 000a 0123     		movs	r3, #1
 1310 000c 1340     		ands	r3, r2
 1311 000e 8B42     		cmp	r3, r1
 1312 0010 0BD2     		bcs	.L134
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1313              		.loc 1 742 0
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 45


 1314 0012 5649     		ldr	r1, .L170
 1315              	.LVL102:
 1316 0014 0B68     		ldr	r3, [r1]
 1317 0016 0122     		movs	r2, #1
 1318 0018 9343     		bics	r3, r2
 1319 001a 2343     		orrs	r3, r4
 1320 001c 0B60     		str	r3, [r1]
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1321              		.loc 1 746 0
 1322 001e 0B68     		ldr	r3, [r1]
 1323 0020 1A40     		ands	r2, r3
 1324 0022 A242     		cmp	r2, r4
 1325 0024 01D0     		beq	.L134
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1326              		.loc 1 748 0
 1327 0026 0120     		movs	r0, #1
 1328              	.LVL103:
 1329              	.L135:
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1330              		.loc 1 878 0
 1331              		@ sp needed
 1332              	.LVL104:
 1333              	.LVL105:
 1334 0028 70BD     		pop	{r4, r5, r6, pc}
 1335              	.LVL106:
 1336              	.L134:
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1337              		.loc 1 753 0
 1338 002a 2B68     		ldr	r3, [r5]
 1339 002c 9B07     		lsls	r3, r3, #30
 1340 002e 06D5     		bpl	.L136
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1341              		.loc 1 756 0
 1342 0030 4F4A     		ldr	r2, .L170+4
 1343 0032 5368     		ldr	r3, [r2, #4]
 1344 0034 F021     		movs	r1, #240
 1345 0036 8B43     		bics	r3, r1
 1346 0038 A968     		ldr	r1, [r5, #8]
 1347 003a 0B43     		orrs	r3, r1
 1348 003c 5360     		str	r3, [r2, #4]
 1349              	.L136:
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1350              		.loc 1 760 0
 1351 003e 2B68     		ldr	r3, [r5]
 1352 0040 DB07     		lsls	r3, r3, #31
 1353 0042 63D5     		bpl	.L137
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1354              		.loc 1 765 0
 1355 0044 6B68     		ldr	r3, [r5, #4]
 1356 0046 012B     		cmp	r3, #1
 1357 0048 09D0     		beq	.L166
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1358              		.loc 1 774 0
 1359 004a 022B     		cmp	r3, #2
 1360 004c 28D0     		beq	.L167
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1361              		.loc 1 784 0
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 46


 1362 004e 032B     		cmp	r3, #3
 1363 0050 2CD0     		beq	.L168
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1364              		.loc 1 797 0
 1365 0052 474A     		ldr	r2, .L170+4
 1366 0054 1268     		ldr	r2, [r2]
 1367 0056 9207     		lsls	r2, r2, #30
 1368 0058 05D4     		bmi	.L139
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1369              		.loc 1 799 0
 1370 005a 0120     		movs	r0, #1
 1371              	.LVL107:
 1372 005c E4E7     		b	.L135
 1373              	.LVL108:
 1374              	.L166:
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1375              		.loc 1 768 0
 1376 005e 444A     		ldr	r2, .L170+4
 1377 0060 1268     		ldr	r2, [r2]
 1378 0062 9203     		lsls	r2, r2, #14
 1379 0064 7FD5     		bpl	.L169
 1380              	.L139:
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1381              		.loc 1 802 0
 1382 0066 4249     		ldr	r1, .L170+4
 1383 0068 4A68     		ldr	r2, [r1, #4]
 1384 006a 0320     		movs	r0, #3
 1385              	.LVL109:
 1386 006c 8243     		bics	r2, r0
 1387 006e 1343     		orrs	r3, r2
 1388 0070 4B60     		str	r3, [r1, #4]
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1389              		.loc 1 805 0
 1390 0072 FFF7FEFF 		bl	HAL_GetTick
 1391              	.LVL110:
 1392 0076 0600     		movs	r6, r0
 1393              	.LVL111:
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1394              		.loc 1 807 0
 1395 0078 6B68     		ldr	r3, [r5, #4]
 1396 007a 012B     		cmp	r3, #1
 1397 007c 1CD0     		beq	.L142
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1398              		.loc 1 817 0
 1399 007e 022B     		cmp	r3, #2
 1400 0080 28D0     		beq	.L145
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1401              		.loc 1 828 0
 1402 0082 032B     		cmp	r3, #3
 1403 0084 34D0     		beq	.L148
 1404              	.LVL112:
 1405              	.L149:
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1406              		.loc 1 841 0
 1407 0086 3A4B     		ldr	r3, .L170+4
 1408 0088 5B68     		ldr	r3, [r3, #4]
 1409 008a 0C22     		movs	r2, #12
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 47


 1410 008c 1A42     		tst	r2, r3
 1411 008e 3DD0     		beq	.L137
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1412              		.loc 1 843 0
 1413 0090 FFF7FEFF 		bl	HAL_GetTick
 1414              	.LVL113:
 1415 0094 801B     		subs	r0, r0, r6
 1416 0096 374B     		ldr	r3, .L170+8
 1417 0098 9842     		cmp	r0, r3
 1418 009a F4D9     		bls	.L149
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1419              		.loc 1 845 0
 1420 009c 0320     		movs	r0, #3
 1421 009e C3E7     		b	.L135
 1422              	.LVL114:
 1423              	.L167:
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1424              		.loc 1 777 0
 1425 00a0 334A     		ldr	r2, .L170+4
 1426 00a2 1268     		ldr	r2, [r2]
 1427 00a4 9201     		lsls	r2, r2, #6
 1428 00a6 DED4     		bmi	.L139
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1429              		.loc 1 779 0
 1430 00a8 0120     		movs	r0, #1
 1431              	.LVL115:
 1432 00aa BDE7     		b	.L135
 1433              	.LVL116:
 1434              	.L168:
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1435              		.loc 1 787 0
 1436 00ac 304A     		ldr	r2, .L170+4
 1437 00ae 526B     		ldr	r2, [r2, #52]
 1438 00b0 D203     		lsls	r2, r2, #15
 1439 00b2 D8D4     		bmi	.L139
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1440              		.loc 1 789 0
 1441 00b4 0120     		movs	r0, #1
 1442              	.LVL117:
 1443 00b6 B7E7     		b	.L135
 1444              	.LVL118:
 1445              	.L142:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1446              		.loc 1 809 0
 1447 00b8 2D4B     		ldr	r3, .L170+4
 1448 00ba 5A68     		ldr	r2, [r3, #4]
 1449 00bc 0C23     		movs	r3, #12
 1450 00be 1340     		ands	r3, r2
 1451 00c0 042B     		cmp	r3, #4
 1452 00c2 23D0     		beq	.L137
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1453              		.loc 1 811 0
 1454 00c4 FFF7FEFF 		bl	HAL_GetTick
 1455              	.LVL119:
 1456 00c8 801B     		subs	r0, r0, r6
 1457 00ca 2A4B     		ldr	r3, .L170+8
 1458 00cc 9842     		cmp	r0, r3
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 48


 1459 00ce F3D9     		bls	.L142
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1460              		.loc 1 813 0
 1461 00d0 0320     		movs	r0, #3
 1462 00d2 A9E7     		b	.L135
 1463              	.L145:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1464              		.loc 1 819 0
 1465 00d4 264B     		ldr	r3, .L170+4
 1466 00d6 5A68     		ldr	r2, [r3, #4]
 1467 00d8 0C23     		movs	r3, #12
 1468 00da 1340     		ands	r3, r2
 1469 00dc 082B     		cmp	r3, #8
 1470 00de 15D0     		beq	.L137
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1471              		.loc 1 821 0
 1472 00e0 FFF7FEFF 		bl	HAL_GetTick
 1473              	.LVL120:
 1474 00e4 801B     		subs	r0, r0, r6
 1475 00e6 234B     		ldr	r3, .L170+8
 1476 00e8 9842     		cmp	r0, r3
 1477 00ea F3D9     		bls	.L145
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1478              		.loc 1 823 0
 1479 00ec 0320     		movs	r0, #3
 1480 00ee 9BE7     		b	.L135
 1481              	.L148:
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1482              		.loc 1 830 0
 1483 00f0 1F4B     		ldr	r3, .L170+4
 1484 00f2 5A68     		ldr	r2, [r3, #4]
 1485 00f4 0C23     		movs	r3, #12
 1486 00f6 1340     		ands	r3, r2
 1487 00f8 0C2B     		cmp	r3, #12
 1488 00fa 07D0     		beq	.L137
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1489              		.loc 1 832 0
 1490 00fc FFF7FEFF 		bl	HAL_GetTick
 1491              	.LVL121:
 1492 0100 801B     		subs	r0, r0, r6
 1493 0102 1C4B     		ldr	r3, .L170+8
 1494 0104 9842     		cmp	r0, r3
 1495 0106 F3D9     		bls	.L148
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1496              		.loc 1 834 0
 1497 0108 0320     		movs	r0, #3
 1498 010a 8DE7     		b	.L135
 1499              	.LVL122:
 1500              	.L137:
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1501              		.loc 1 851 0
 1502 010c 174B     		ldr	r3, .L170
 1503 010e 1A68     		ldr	r2, [r3]
 1504 0110 0123     		movs	r3, #1
 1505 0112 1340     		ands	r3, r2
 1506 0114 A342     		cmp	r3, r4
 1507 0116 0BD9     		bls	.L152
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 49


 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1508              		.loc 1 854 0
 1509 0118 1449     		ldr	r1, .L170
 1510 011a 0B68     		ldr	r3, [r1]
 1511 011c 0122     		movs	r2, #1
 1512 011e 9343     		bics	r3, r2
 1513 0120 2343     		orrs	r3, r4
 1514 0122 0B60     		str	r3, [r1]
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1515              		.loc 1 858 0
 1516 0124 0B68     		ldr	r3, [r1]
 1517 0126 1A40     		ands	r2, r3
 1518 0128 A242     		cmp	r2, r4
 1519 012a 01D0     		beq	.L152
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1520              		.loc 1 860 0
 1521 012c 0120     		movs	r0, #1
 1522 012e 7BE7     		b	.L135
 1523              	.L152:
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1524              		.loc 1 865 0
 1525 0130 2B68     		ldr	r3, [r5]
 1526 0132 5B07     		lsls	r3, r3, #29
 1527 0134 06D5     		bpl	.L153
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1528              		.loc 1 868 0
 1529 0136 0E4A     		ldr	r2, .L170+4
 1530 0138 5368     		ldr	r3, [r2, #4]
 1531 013a 0F49     		ldr	r1, .L170+12
 1532 013c 0B40     		ands	r3, r1
 1533 013e E968     		ldr	r1, [r5, #12]
 1534 0140 0B43     		orrs	r3, r1
 1535 0142 5360     		str	r3, [r2, #4]
 1536              	.L153:
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1537              		.loc 1 872 0
 1538 0144 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1539              	.LVL123:
 1540 0148 094B     		ldr	r3, .L170+4
 1541 014a 5A68     		ldr	r2, [r3, #4]
 1542 014c 1209     		lsrs	r2, r2, #4
 1543 014e 0F23     		movs	r3, #15
 1544 0150 1340     		ands	r3, r2
 1545 0152 0A4A     		ldr	r2, .L170+16
 1546 0154 D35C     		ldrb	r3, [r2, r3]
 1547 0156 D840     		lsrs	r0, r0, r3
 1548 0158 094B     		ldr	r3, .L170+20
 1549 015a 1860     		str	r0, [r3]
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1550              		.loc 1 875 0
 1551 015c 0020     		movs	r0, #0
 1552 015e FFF7FEFF 		bl	HAL_InitTick
 1553              	.LVL124:
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1554              		.loc 1 877 0
 1555 0162 0020     		movs	r0, #0
 1556 0164 60E7     		b	.L135
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 50


 1557              	.LVL125:
 1558              	.L169:
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1559              		.loc 1 770 0
 1560 0166 0120     		movs	r0, #1
 1561              	.LVL126:
 1562 0168 5EE7     		b	.L135
 1563              	.L171:
 1564 016a C046     		.align	2
 1565              	.L170:
 1566 016c 00200240 		.word	1073881088
 1567 0170 00100240 		.word	1073876992
 1568 0174 88130000 		.word	5000
 1569 0178 FFF8FFFF 		.word	-1793
 1570 017c 00000000 		.word	AHBPrescTable
 1571 0180 00000000 		.word	SystemCoreClock
 1572              		.cfi_endproc
 1573              	.LFE39:
 1575              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1576              		.align	1
 1577              		.global	HAL_RCC_GetHCLKFreq
 1578              		.syntax unified
 1579              		.code	16
 1580              		.thumb_func
 1581              		.fpu softvfp
 1583              	HAL_RCC_GetHCLKFreq:
 1584              	.LFB44:
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1585              		.loc 1 1140 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              		@ link register save eliminated.
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1590              		.loc 1 1141 0
 1591 0000 014B     		ldr	r3, .L173
 1592 0002 1868     		ldr	r0, [r3]
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1593              		.loc 1 1142 0
 1594              		@ sp needed
 1595 0004 7047     		bx	lr
 1596              	.L174:
 1597 0006 C046     		.align	2
 1598              	.L173:
 1599 0008 00000000 		.word	SystemCoreClock
 1600              		.cfi_endproc
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 51


 1601              	.LFE44:
 1603              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1604              		.align	1
 1605              		.global	HAL_RCC_GetPCLK1Freq
 1606              		.syntax unified
 1607              		.code	16
 1608              		.thumb_func
 1609              		.fpu softvfp
 1611              	HAL_RCC_GetPCLK1Freq:
 1612              	.LFB45:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1613              		.loc 1 1151 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617 0000 10B5     		push	{r4, lr}
 1618              	.LCFI7:
 1619              		.cfi_def_cfa_offset 8
 1620              		.cfi_offset 4, -8
 1621              		.cfi_offset 14, -4
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 1622              		.loc 1 1153 0
 1623 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1624              	.LVL127:
 1625 0006 044B     		ldr	r3, .L176
 1626 0008 5A68     		ldr	r2, [r3, #4]
 1627 000a 120A     		lsrs	r2, r2, #8
 1628 000c 0723     		movs	r3, #7
 1629 000e 1340     		ands	r3, r2
 1630 0010 024A     		ldr	r2, .L176+4
 1631 0012 D35C     		ldrb	r3, [r2, r3]
 1632 0014 D840     		lsrs	r0, r0, r3
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1633              		.loc 1 1154 0
 1634              		@ sp needed
 1635 0016 10BD     		pop	{r4, pc}
 1636              	.L177:
 1637              		.align	2
 1638              	.L176:
 1639 0018 00100240 		.word	1073876992
 1640 001c 00000000 		.word	APBPrescTable
 1641              		.cfi_endproc
 1642              	.LFE45:
 1644              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1645              		.align	1
 1646              		.global	HAL_RCC_GetOscConfig
 1647              		.syntax unified
 1648              		.code	16
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 52


 1649              		.thumb_func
 1650              		.fpu softvfp
 1652              	HAL_RCC_GetOscConfig:
 1653              	.LFB46:
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1654              		.loc 1 1164 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659              	.LVL128:
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
 1660              		.loc 1 1172 0
 1661 0000 3F23     		movs	r3, #63
 1662 0002 0360     		str	r3, [r0]
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1663              		.loc 1 1177 0
 1664 0004 324B     		ldr	r3, .L194
 1665 0006 1B68     		ldr	r3, [r3]
 1666 0008 5B03     		lsls	r3, r3, #13
 1667 000a 40D5     		bpl	.L179
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1668              		.loc 1 1179 0
 1669 000c 0523     		movs	r3, #5
 1670 000e 4360     		str	r3, [r0, #4]
 1671              	.L180:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 53


1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1672              		.loc 1 1191 0
 1673 0010 2F4B     		ldr	r3, .L194
 1674 0012 1B68     		ldr	r3, [r3]
 1675 0014 DB07     		lsls	r3, r3, #31
 1676 0016 44D5     		bpl	.L182
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1677              		.loc 1 1193 0
 1678 0018 0123     		movs	r3, #1
 1679 001a C360     		str	r3, [r0, #12]
 1680              	.L183:
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 1681              		.loc 1 1200 0
 1682 001c 2C49     		ldr	r1, .L194
 1683 001e 0A68     		ldr	r2, [r1]
 1684 0020 D208     		lsrs	r2, r2, #3
 1685 0022 1F23     		movs	r3, #31
 1686 0024 1340     		ands	r3, r2
 1687 0026 0361     		str	r3, [r0, #16]
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1688              		.loc 1 1203 0
 1689 0028 0B6A     		ldr	r3, [r1, #32]
 1690 002a 5B07     		lsls	r3, r3, #29
 1691 002c 3CD5     		bpl	.L184
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1692              		.loc 1 1205 0
 1693 002e 0523     		movs	r3, #5
 1694 0030 8360     		str	r3, [r0, #8]
 1695              	.L185:
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1696              		.loc 1 1217 0
 1697 0032 274B     		ldr	r3, .L194
 1698 0034 5B6A     		ldr	r3, [r3, #36]
 1699 0036 DB07     		lsls	r3, r3, #31
 1700 0038 40D5     		bpl	.L187
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 54


1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1701              		.loc 1 1219 0
 1702 003a 0123     		movs	r3, #1
 1703 003c C361     		str	r3, [r0, #28]
 1704              	.L188:
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 1705              		.loc 1 1227 0
 1706 003e 244B     		ldr	r3, .L194
 1707 0040 5B6B     		ldr	r3, [r3, #52]
 1708 0042 DB07     		lsls	r3, r3, #31
 1709 0044 3DD5     		bpl	.L189
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 1710              		.loc 1 1229 0
 1711 0046 0123     		movs	r3, #1
 1712 0048 4361     		str	r3, [r0, #20]
 1713              	.L190:
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 1714              		.loc 1 1236 0
 1715 004a 214A     		ldr	r2, .L194
 1716 004c 516B     		ldr	r1, [r2, #52]
 1717 004e C908     		lsrs	r1, r1, #3
 1718 0050 1F23     		movs	r3, #31
 1719 0052 0B40     		ands	r3, r1
 1720 0054 8361     		str	r3, [r0, #24]
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
 1721              		.loc 1 1240 0
 1722 0056 536B     		ldr	r3, [r2, #52]
 1723 0058 8021     		movs	r1, #128
 1724 005a 4902     		lsls	r1, r1, #9
 1725 005c 0B40     		ands	r3, r1
 1726 005e 591E     		subs	r1, r3, #1
 1727 0060 8B41     		sbcs	r3, r3, r1
 1728 0062 0362     		str	r3, [r0, #32]
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1729              		.loc 1 1244 0
 1730 0064 1368     		ldr	r3, [r2]
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 55


 1731 0066 DB01     		lsls	r3, r3, #7
 1732 0068 2ED4     		bmi	.L193
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1733              		.loc 1 1250 0
 1734 006a 0123     		movs	r3, #1
 1735 006c 4362     		str	r3, [r0, #36]
 1736              	.L192:
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 1737              		.loc 1 1252 0
 1738 006e 184B     		ldr	r3, .L194
 1739 0070 5A68     		ldr	r2, [r3, #4]
 1740 0072 C021     		movs	r1, #192
 1741 0074 4902     		lsls	r1, r1, #9
 1742 0076 0A40     		ands	r2, r1
 1743 0078 8262     		str	r2, [r0, #40]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 1744              		.loc 1 1253 0
 1745 007a 5A68     		ldr	r2, [r3, #4]
 1746 007c F021     		movs	r1, #240
 1747 007e 8903     		lsls	r1, r1, #14
 1748 0080 0A40     		ands	r2, r1
 1749 0082 C262     		str	r2, [r0, #44]
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 1750              		.loc 1 1254 0
 1751 0084 DA6A     		ldr	r2, [r3, #44]
 1752 0086 0F23     		movs	r3, #15
 1753 0088 1340     		ands	r3, r2
 1754 008a 0363     		str	r3, [r0, #48]
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1755              		.loc 1 1255 0
 1756              		@ sp needed
 1757 008c 7047     		bx	lr
 1758              	.L179:
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1759              		.loc 1 1181 0
 1760 008e 104B     		ldr	r3, .L194
 1761 0090 1B68     		ldr	r3, [r3]
 1762 0092 DB03     		lsls	r3, r3, #15
 1763 0094 02D5     		bpl	.L181
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1764              		.loc 1 1183 0
 1765 0096 0123     		movs	r3, #1
 1766 0098 4360     		str	r3, [r0, #4]
 1767 009a B9E7     		b	.L180
 1768              	.L181:
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1769              		.loc 1 1187 0
 1770 009c 0023     		movs	r3, #0
 1771 009e 4360     		str	r3, [r0, #4]
 1772 00a0 B6E7     		b	.L180
 1773              	.L182:
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 56


1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1774              		.loc 1 1197 0
 1775 00a2 0023     		movs	r3, #0
 1776 00a4 C360     		str	r3, [r0, #12]
 1777 00a6 B9E7     		b	.L183
 1778              	.L184:
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1779              		.loc 1 1207 0
 1780 00a8 094B     		ldr	r3, .L194
 1781 00aa 1B6A     		ldr	r3, [r3, #32]
 1782 00ac DB07     		lsls	r3, r3, #31
 1783 00ae 02D5     		bpl	.L186
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1784              		.loc 1 1209 0
 1785 00b0 0123     		movs	r3, #1
 1786 00b2 8360     		str	r3, [r0, #8]
 1787 00b4 BDE7     		b	.L185
 1788              	.L186:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1789              		.loc 1 1213 0
 1790 00b6 0023     		movs	r3, #0
 1791 00b8 8360     		str	r3, [r0, #8]
 1792 00ba BAE7     		b	.L185
 1793              	.L187:
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1794              		.loc 1 1223 0
 1795 00bc 0023     		movs	r3, #0
 1796 00be C361     		str	r3, [r0, #28]
 1797 00c0 BDE7     		b	.L188
 1798              	.L189:
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1799              		.loc 1 1233 0
 1800 00c2 0023     		movs	r3, #0
 1801 00c4 4361     		str	r3, [r0, #20]
 1802 00c6 C0E7     		b	.L190
 1803              	.L193:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1804              		.loc 1 1246 0
 1805 00c8 0223     		movs	r3, #2
 1806 00ca 4362     		str	r3, [r0, #36]
 1807 00cc CFE7     		b	.L192
 1808              	.L195:
 1809 00ce C046     		.align	2
 1810              	.L194:
 1811 00d0 00100240 		.word	1073876992
 1812              		.cfi_endproc
 1813              	.LFE46:
 1815              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1816              		.align	1
 1817              		.global	HAL_RCC_GetClockConfig
 1818              		.syntax unified
 1819              		.code	16
 1820              		.thumb_func
 1821              		.fpu softvfp
 1823              	HAL_RCC_GetClockConfig:
 1824              	.LFB47:
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 57


1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1825              		.loc 1 1266 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              	.LVL129:
 1830 0000 10B5     		push	{r4, lr}
 1831              	.LCFI8:
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 1835              		.loc 1 1272 0
 1836 0002 0723     		movs	r3, #7
 1837 0004 0360     		str	r3, [r0]
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1838              		.loc 1 1275 0
 1839 0006 0A4B     		ldr	r3, .L197
 1840 0008 5C68     		ldr	r4, [r3, #4]
 1841 000a 0322     		movs	r2, #3
 1842 000c 2240     		ands	r2, r4
 1843 000e 4260     		str	r2, [r0, #4]
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 1844              		.loc 1 1278 0
 1845 0010 5C68     		ldr	r4, [r3, #4]
 1846 0012 F022     		movs	r2, #240
 1847 0014 2240     		ands	r2, r4
 1848 0016 8260     		str	r2, [r0, #8]
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 1849              		.loc 1 1281 0
 1850 0018 5B68     		ldr	r3, [r3, #4]
 1851 001a E022     		movs	r2, #224
 1852 001c D200     		lsls	r2, r2, #3
 1853 001e 1340     		ands	r3, r2
 1854 0020 C360     		str	r3, [r0, #12]
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 58


 1855              		.loc 1 1283 0
 1856 0022 044B     		ldr	r3, .L197+4
 1857 0024 1A68     		ldr	r2, [r3]
 1858 0026 0123     		movs	r3, #1
 1859 0028 1340     		ands	r3, r2
 1860 002a 0B60     		str	r3, [r1]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1861              		.loc 1 1284 0
 1862              		@ sp needed
 1863 002c 10BD     		pop	{r4, pc}
 1864              	.L198:
 1865 002e C046     		.align	2
 1866              	.L197:
 1867 0030 00100240 		.word	1073876992
 1868 0034 00200240 		.word	1073881088
 1869              		.cfi_endproc
 1870              	.LFE47:
 1872              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1873              		.align	1
 1874              		.weak	HAL_RCC_CSSCallback
 1875              		.syntax unified
 1876              		.code	16
 1877              		.thumb_func
 1878              		.fpu softvfp
 1880              	HAL_RCC_CSSCallback:
 1881              	.LFB49:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1882              		.loc 1 1309 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 0
 1885              		@ frame_needed = 0, uses_anonymous_args = 0
 1886              		@ link register save eliminated.
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 59


1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1887              		.loc 1 1313 0
 1888              		@ sp needed
 1889 0000 7047     		bx	lr
 1890              		.cfi_endproc
 1891              	.LFE49:
 1893              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1894              		.align	1
 1895              		.global	HAL_RCC_NMI_IRQHandler
 1896              		.syntax unified
 1897              		.code	16
 1898              		.thumb_func
 1899              		.fpu softvfp
 1901              	HAL_RCC_NMI_IRQHandler:
 1902              	.LFB48:
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1903              		.loc 1 1292 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907 0000 10B5     		push	{r4, lr}
 1908              	.LCFI9:
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 4, -8
 1911              		.cfi_offset 14, -4
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1912              		.loc 1 1294 0
 1913 0002 054B     		ldr	r3, .L203
 1914 0004 9B68     		ldr	r3, [r3, #8]
 1915 0006 1B06     		lsls	r3, r3, #24
 1916 0008 00D4     		bmi	.L202
 1917              	.L200:
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1918              		.loc 1 1302 0
 1919              		@ sp needed
 1920 000a 10BD     		pop	{r4, pc}
 1921              	.L202:
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1922              		.loc 1 1297 0
 1923 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1924              	.LVL130:
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1925              		.loc 1 1300 0
 1926 0010 024B     		ldr	r3, .L203+4
 1927 0012 8022     		movs	r2, #128
 1928 0014 1A70     		strb	r2, [r3]
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1929              		.loc 1 1302 0
 1930 0016 F8E7     		b	.L200
 1931              	.L204:
 1932              		.align	2
 1933              	.L203:
 1934 0018 00100240 		.word	1073876992
 1935 001c 0A100240 		.word	1073877002
 1936              		.cfi_endproc
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 60


 1937              	.LFE48:
 1939              		.section	.rodata
 1940              		.align	2
 1941              		.set	.LANCHOR0,. + 0
 1942              	.LC0:
 1943 0000 02       		.byte	2
 1944 0001 03       		.byte	3
 1945 0002 04       		.byte	4
 1946 0003 05       		.byte	5
 1947 0004 06       		.byte	6
 1948 0005 07       		.byte	7
 1949 0006 08       		.byte	8
 1950 0007 09       		.byte	9
 1951 0008 0A       		.byte	10
 1952 0009 0B       		.byte	11
 1953 000a 0C       		.byte	12
 1954 000b 0D       		.byte	13
 1955 000c 0E       		.byte	14
 1956 000d 0F       		.byte	15
 1957 000e 10       		.byte	16
 1958 000f 10       		.byte	16
 1959              	.LC1:
 1960 0010 01       		.byte	1
 1961 0011 02       		.byte	2
 1962 0012 03       		.byte	3
 1963 0013 04       		.byte	4
 1964 0014 05       		.byte	5
 1965 0015 06       		.byte	6
 1966 0016 07       		.byte	7
 1967 0017 08       		.byte	8
 1968 0018 09       		.byte	9
 1969 0019 0A       		.byte	10
 1970 001a 0B       		.byte	11
 1971 001b 0C       		.byte	12
 1972 001c 0D       		.byte	13
 1973 001d 0E       		.byte	14
 1974 001e 0F       		.byte	15
 1975 001f 10       		.byte	16
 1976              		.text
 1977              	.Letext0:
 1978              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1979              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1980              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1981              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 1982              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1983              		.file 7 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1984              		.file 8 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1985              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 1986              		.file 10 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1987              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1988              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1989              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1990              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  E:\cygwin64\tmp\cc93ya9m.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rcc.c
E:\cygwin64\tmp\cc93ya9m.s:16     .text.HAL_RCC_DeInit:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:23     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
E:\cygwin64\tmp\cc93ya9m.s:71     .text.HAL_RCC_DeInit:00000034 $d
E:\cygwin64\tmp\cc93ya9m.s:81     .text.HAL_RCC_OscConfig:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:88     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
E:\cygwin64\tmp\cc93ya9m.s:619    .text.HAL_RCC_OscConfig:000002dc $d
E:\cygwin64\tmp\cc93ya9m.s:626    .text.HAL_RCC_OscConfig:000002f0 $t
E:\cygwin64\tmp\cc93ya9m.s:992    .text.HAL_RCC_OscConfig:000004e8 $d
E:\cygwin64\tmp\cc93ya9m.s:1001   .text.HAL_RCC_MCOConfig:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1008   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
E:\cygwin64\tmp\cc93ya9m.s:1080   .text.HAL_RCC_MCOConfig:0000004c $d
E:\cygwin64\tmp\cc93ya9m.s:1086   .text.HAL_RCC_EnableCSS:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1093   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
E:\cygwin64\tmp\cc93ya9m.s:1113   .text.HAL_RCC_EnableCSS:00000010 $d
E:\cygwin64\tmp\cc93ya9m.s:1118   .text.HAL_RCC_DisableCSS:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1125   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
E:\cygwin64\tmp\cc93ya9m.s:1144   .text.HAL_RCC_DisableCSS:0000000c $d
E:\cygwin64\tmp\cc93ya9m.s:1151   .text.HAL_RCC_GetSysClockFreq:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1158   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
E:\cygwin64\tmp\cc93ya9m.s:1274   .text.HAL_RCC_GetSysClockFreq:00000084 $d
E:\cygwin64\tmp\cc93ya9m.s:1282   .text.HAL_RCC_ClockConfig:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1289   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
E:\cygwin64\tmp\cc93ya9m.s:1566   .text.HAL_RCC_ClockConfig:0000016c $d
E:\cygwin64\tmp\cc93ya9m.s:1576   .text.HAL_RCC_GetHCLKFreq:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1583   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
E:\cygwin64\tmp\cc93ya9m.s:1599   .text.HAL_RCC_GetHCLKFreq:00000008 $d
E:\cygwin64\tmp\cc93ya9m.s:1604   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1611   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
E:\cygwin64\tmp\cc93ya9m.s:1639   .text.HAL_RCC_GetPCLK1Freq:00000018 $d
E:\cygwin64\tmp\cc93ya9m.s:1645   .text.HAL_RCC_GetOscConfig:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1652   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
E:\cygwin64\tmp\cc93ya9m.s:1811   .text.HAL_RCC_GetOscConfig:000000d0 $d
E:\cygwin64\tmp\cc93ya9m.s:1816   .text.HAL_RCC_GetClockConfig:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1823   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
E:\cygwin64\tmp\cc93ya9m.s:1867   .text.HAL_RCC_GetClockConfig:00000030 $d
E:\cygwin64\tmp\cc93ya9m.s:1873   .text.HAL_RCC_CSSCallback:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1880   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
E:\cygwin64\tmp\cc93ya9m.s:1894   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
E:\cygwin64\tmp\cc93ya9m.s:1901   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
E:\cygwin64\tmp\cc93ya9m.s:1934   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
E:\cygwin64\tmp\cc93ya9m.s:1940   .rodata:00000000 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
__aeabi_uidiv
HAL_InitTick
AHBPrescTable
APBPrescTable

ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_ADC_Init:
  24              	.LFB37:
  25              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * File Name          : ADC.c
   4:Core/Src/adc.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/adc.c ****   *                      of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/adc.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/adc.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc;
  28:Core/Src/adc.c **** 
  29:Core/Src/adc.c **** /* ADC init function */
  30:Core/Src/adc.c **** void MX_ADC_Init(void)
  31:Core/Src/adc.c **** {
  26              		.loc 1 31 0
  27              		.cfi_startproc
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 2


  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 85B0     		sub	sp, sp, #20
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  32:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  37              		.loc 1 32 0
  38 0004 0C22     		movs	r2, #12
  39 0006 0021     		movs	r1, #0
  40 0008 01A8     		add	r0, sp, #4
  41 000a FFF7FEFF 		bl	memset
  42              	.LVL0:
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  35:Core/Src/adc.c ****   */
  36:Core/Src/adc.c ****   hadc.Instance = ADC1;
  43              		.loc 1 36 0
  44 000e 2748     		ldr	r0, .L12
  45 0010 274B     		ldr	r3, .L12+4
  46 0012 0360     		str	r3, [r0]
  37:Core/Src/adc.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  47              		.loc 1 37 0
  48 0014 0023     		movs	r3, #0
  49 0016 4360     		str	r3, [r0, #4]
  38:Core/Src/adc.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  50              		.loc 1 38 0
  51 0018 8360     		str	r3, [r0, #8]
  39:Core/Src/adc.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  52              		.loc 1 39 0
  53 001a C360     		str	r3, [r0, #12]
  40:Core/Src/adc.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  54              		.loc 1 40 0
  55 001c 0122     		movs	r2, #1
  56 001e 0261     		str	r2, [r0, #16]
  41:Core/Src/adc.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  57              		.loc 1 41 0
  58 0020 0821     		movs	r1, #8
  59 0022 4161     		str	r1, [r0, #20]
  42:Core/Src/adc.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
  60              		.loc 1 42 0
  61 0024 8361     		str	r3, [r0, #24]
  43:Core/Src/adc.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
  62              		.loc 1 43 0
  63 0026 C361     		str	r3, [r0, #28]
  44:Core/Src/adc.c ****   hadc.Init.ContinuousConvMode = ENABLE;
  64              		.loc 1 44 0
  65 0028 0262     		str	r2, [r0, #32]
  45:Core/Src/adc.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  66              		.loc 1 45 0
  67 002a 4362     		str	r3, [r0, #36]
  46:Core/Src/adc.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  68              		.loc 1 46 0
  69 002c C221     		movs	r1, #194
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 3


  70 002e FF31     		adds	r1, r1, #255
  71 0030 8162     		str	r1, [r0, #40]
  47:Core/Src/adc.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  72              		.loc 1 47 0
  73 0032 C362     		str	r3, [r0, #44]
  48:Core/Src/adc.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
  74              		.loc 1 48 0
  75 0034 0263     		str	r2, [r0, #48]
  49:Core/Src/adc.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  76              		.loc 1 49 0
  77 0036 4263     		str	r2, [r0, #52]
  50:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
  78              		.loc 1 50 0
  79 0038 FFF7FEFF 		bl	HAL_ADC_Init
  80              	.LVL1:
  81 003c 0028     		cmp	r0, #0
  82 003e 26D1     		bne	.L7
  83              	.L2:
  51:Core/Src/adc.c ****   {
  52:Core/Src/adc.c ****     Error_Handler();
  53:Core/Src/adc.c ****   }
  54:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted. 
  55:Core/Src/adc.c ****   */
  56:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
  84              		.loc 1 56 0
  85 0040 0423     		movs	r3, #4
  86 0042 0193     		str	r3, [sp, #4]
  57:Core/Src/adc.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
  87              		.loc 1 57 0
  88 0044 8023     		movs	r3, #128
  89 0046 5B01     		lsls	r3, r3, #5
  90 0048 0293     		str	r3, [sp, #8]
  58:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES_5;
  91              		.loc 1 58 0
  92 004a 0323     		movs	r3, #3
  93 004c 0393     		str	r3, [sp, #12]
  59:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
  94              		.loc 1 59 0
  95 004e 01A9     		add	r1, sp, #4
  96 0050 1648     		ldr	r0, .L12
  97 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  98              	.LVL2:
  99 0056 0028     		cmp	r0, #0
 100 0058 1CD1     		bne	.L8
 101              	.L3:
  60:Core/Src/adc.c ****   {
  61:Core/Src/adc.c ****     Error_Handler();
  62:Core/Src/adc.c ****   }
  63:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted. 
  64:Core/Src/adc.c ****   */
  65:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_5;
 102              		.loc 1 65 0
 103 005a 0523     		movs	r3, #5
 104 005c 0193     		str	r3, [sp, #4]
  66:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 105              		.loc 1 66 0
 106 005e 01A9     		add	r1, sp, #4
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 4


 107 0060 1248     		ldr	r0, .L12
 108 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 109              	.LVL3:
 110 0066 0028     		cmp	r0, #0
 111 0068 17D1     		bne	.L9
 112              	.L4:
  67:Core/Src/adc.c ****   {
  68:Core/Src/adc.c ****     Error_Handler();
  69:Core/Src/adc.c ****   }
  70:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted. 
  71:Core/Src/adc.c ****   */
  72:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_6;
 113              		.loc 1 72 0
 114 006a 0623     		movs	r3, #6
 115 006c 0193     		str	r3, [sp, #4]
  73:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 116              		.loc 1 73 0
 117 006e 01A9     		add	r1, sp, #4
 118 0070 0E48     		ldr	r0, .L12
 119 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 120              	.LVL4:
 121 0076 0028     		cmp	r0, #0
 122 0078 12D1     		bne	.L10
 123              	.L5:
  74:Core/Src/adc.c ****   {
  75:Core/Src/adc.c ****     Error_Handler();
  76:Core/Src/adc.c ****   }
  77:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted. 
  78:Core/Src/adc.c ****   */
  79:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_7;
 124              		.loc 1 79 0
 125 007a 0723     		movs	r3, #7
 126 007c 0193     		str	r3, [sp, #4]
  80:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 127              		.loc 1 80 0
 128 007e 01A9     		add	r1, sp, #4
 129 0080 0A48     		ldr	r0, .L12
 130 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 131              	.LVL5:
 132 0086 0028     		cmp	r0, #0
 133 0088 0DD1     		bne	.L11
 134              	.L1:
  81:Core/Src/adc.c ****   {
  82:Core/Src/adc.c ****     Error_Handler();
  83:Core/Src/adc.c ****   }
  84:Core/Src/adc.c **** 
  85:Core/Src/adc.c **** }
 135              		.loc 1 85 0
 136 008a 05B0     		add	sp, sp, #20
 137              		@ sp needed
 138 008c 00BD     		pop	{pc}
 139              	.L7:
  52:Core/Src/adc.c ****   }
 140              		.loc 1 52 0
 141 008e FFF7FEFF 		bl	Error_Handler
 142              	.LVL6:
 143 0092 D5E7     		b	.L2
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 5


 144              	.L8:
  61:Core/Src/adc.c ****   }
 145              		.loc 1 61 0
 146 0094 FFF7FEFF 		bl	Error_Handler
 147              	.LVL7:
 148 0098 DFE7     		b	.L3
 149              	.L9:
  68:Core/Src/adc.c ****   }
 150              		.loc 1 68 0
 151 009a FFF7FEFF 		bl	Error_Handler
 152              	.LVL8:
 153 009e E4E7     		b	.L4
 154              	.L10:
  75:Core/Src/adc.c ****   }
 155              		.loc 1 75 0
 156 00a0 FFF7FEFF 		bl	Error_Handler
 157              	.LVL9:
 158 00a4 E9E7     		b	.L5
 159              	.L11:
  82:Core/Src/adc.c ****   }
 160              		.loc 1 82 0
 161 00a6 FFF7FEFF 		bl	Error_Handler
 162              	.LVL10:
 163              		.loc 1 85 0
 164 00aa EEE7     		b	.L1
 165              	.L13:
 166              		.align	2
 167              	.L12:
 168 00ac 00000000 		.word	hadc
 169 00b0 00240140 		.word	1073816576
 170              		.cfi_endproc
 171              	.LFE37:
 173              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 174              		.align	1
 175              		.global	HAL_ADC_MspInit
 176              		.syntax unified
 177              		.code	16
 178              		.thumb_func
 179              		.fpu softvfp
 181              	HAL_ADC_MspInit:
 182              	.LFB38:
  86:Core/Src/adc.c **** 
  87:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  88:Core/Src/adc.c **** {
 183              		.loc 1 88 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 32
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              	.LVL11:
 188 0000 10B5     		push	{r4, lr}
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 193 0002 88B0     		sub	sp, sp, #32
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 40
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 6


 196 0004 0400     		movs	r4, r0
  89:Core/Src/adc.c **** 
  90:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 197              		.loc 1 90 0
 198 0006 1422     		movs	r2, #20
 199 0008 0021     		movs	r1, #0
 200 000a 03A8     		add	r0, sp, #12
 201              	.LVL12:
 202 000c FFF7FEFF 		bl	memset
 203              	.LVL13:
  91:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 204              		.loc 1 91 0
 205 0010 2268     		ldr	r2, [r4]
 206 0012 114B     		ldr	r3, .L17
 207 0014 9A42     		cmp	r2, r3
 208 0016 01D0     		beq	.L16
 209              	.L14:
  92:Core/Src/adc.c ****   {
  93:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  94:Core/Src/adc.c **** 
  95:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
  96:Core/Src/adc.c ****     /* ADC1 clock enable */
  97:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
  98:Core/Src/adc.c ****   
  99:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 100:Core/Src/adc.c ****     /**ADC GPIO Configuration    
 101:Core/Src/adc.c ****     PA4     ------> ADC_IN4
 102:Core/Src/adc.c ****     PA5     ------> ADC_IN5
 103:Core/Src/adc.c ****     PA6     ------> ADC_IN6
 104:Core/Src/adc.c ****     PA7     ------> ADC_IN7 
 105:Core/Src/adc.c ****     */
 106:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 107:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 108:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 109:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 110:Core/Src/adc.c **** 
 111:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 112:Core/Src/adc.c **** 
 113:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 114:Core/Src/adc.c ****   }
 115:Core/Src/adc.c **** }
 210              		.loc 1 115 0
 211 0018 08B0     		add	sp, sp, #32
 212              		@ sp needed
 213              	.LVL14:
 214 001a 10BD     		pop	{r4, pc}
 215              	.LVL15:
 216              	.L16:
 217              	.LBB2:
  97:Core/Src/adc.c ****   
 218              		.loc 1 97 0
 219 001c 0F4B     		ldr	r3, .L17+4
 220 001e 9969     		ldr	r1, [r3, #24]
 221 0020 8020     		movs	r0, #128
 222 0022 8000     		lsls	r0, r0, #2
 223 0024 0143     		orrs	r1, r0
 224 0026 9961     		str	r1, [r3, #24]
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 7


 225 0028 9A69     		ldr	r2, [r3, #24]
 226 002a 0240     		ands	r2, r0
 227 002c 0192     		str	r2, [sp, #4]
 228 002e 019A     		ldr	r2, [sp, #4]
 229              	.LBE2:
 230              	.LBB3:
  99:Core/Src/adc.c ****     /**ADC GPIO Configuration    
 231              		.loc 1 99 0
 232 0030 5A69     		ldr	r2, [r3, #20]
 233 0032 8021     		movs	r1, #128
 234 0034 8902     		lsls	r1, r1, #10
 235 0036 0A43     		orrs	r2, r1
 236 0038 5A61     		str	r2, [r3, #20]
 237 003a 5B69     		ldr	r3, [r3, #20]
 238 003c 0B40     		ands	r3, r1
 239 003e 0293     		str	r3, [sp, #8]
 240 0040 029B     		ldr	r3, [sp, #8]
 241              	.LBE3:
 106:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 242              		.loc 1 106 0
 243 0042 F023     		movs	r3, #240
 244 0044 0393     		str	r3, [sp, #12]
 107:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 245              		.loc 1 107 0
 246 0046 ED3B     		subs	r3, r3, #237
 247 0048 0493     		str	r3, [sp, #16]
 109:Core/Src/adc.c **** 
 248              		.loc 1 109 0
 249 004a 7138     		subs	r0, r0, #113
 250 004c FF38     		subs	r0, r0, #255
 251 004e 03A9     		add	r1, sp, #12
 252 0050 C005     		lsls	r0, r0, #23
 253 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 254              	.LVL16:
 255              		.loc 1 115 0
 256 0056 DFE7     		b	.L14
 257              	.L18:
 258              		.align	2
 259              	.L17:
 260 0058 00240140 		.word	1073816576
 261 005c 00100240 		.word	1073876992
 262              		.cfi_endproc
 263              	.LFE38:
 265              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 266              		.align	1
 267              		.global	HAL_ADC_MspDeInit
 268              		.syntax unified
 269              		.code	16
 270              		.thumb_func
 271              		.fpu softvfp
 273              	HAL_ADC_MspDeInit:
 274              	.LFB39:
 116:Core/Src/adc.c **** 
 117:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 118:Core/Src/adc.c **** {
 275              		.loc 1 118 0
 276              		.cfi_startproc
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 8


 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              	.LVL17:
 280 0000 10B5     		push	{r4, lr}
 281              	.LCFI4:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 4, -8
 284              		.cfi_offset 14, -4
 119:Core/Src/adc.c **** 
 120:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 285              		.loc 1 120 0
 286 0002 0268     		ldr	r2, [r0]
 287 0004 074B     		ldr	r3, .L22
 288 0006 9A42     		cmp	r2, r3
 289 0008 00D0     		beq	.L21
 290              	.LVL18:
 291              	.L19:
 121:Core/Src/adc.c ****   {
 122:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 123:Core/Src/adc.c **** 
 124:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 125:Core/Src/adc.c ****     /* Peripheral clock disable */
 126:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 127:Core/Src/adc.c ****   
 128:Core/Src/adc.c ****     /**ADC GPIO Configuration    
 129:Core/Src/adc.c ****     PA4     ------> ADC_IN4
 130:Core/Src/adc.c ****     PA5     ------> ADC_IN5
 131:Core/Src/adc.c ****     PA6     ------> ADC_IN6
 132:Core/Src/adc.c ****     PA7     ------> ADC_IN7 
 133:Core/Src/adc.c ****     */
 134:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 135:Core/Src/adc.c **** 
 136:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 137:Core/Src/adc.c **** 
 138:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 139:Core/Src/adc.c ****   }
 140:Core/Src/adc.c **** } 
 292              		.loc 1 140 0
 293              		@ sp needed
 294 000a 10BD     		pop	{r4, pc}
 295              	.LVL19:
 296              	.L21:
 126:Core/Src/adc.c ****   
 297              		.loc 1 126 0
 298 000c 064A     		ldr	r2, .L22+4
 299 000e 9369     		ldr	r3, [r2, #24]
 300 0010 0649     		ldr	r1, .L22+8
 301 0012 0B40     		ands	r3, r1
 302 0014 9361     		str	r3, [r2, #24]
 134:Core/Src/adc.c **** 
 303              		.loc 1 134 0
 304 0016 9020     		movs	r0, #144
 305              	.LVL20:
 306 0018 F021     		movs	r1, #240
 307 001a C005     		lsls	r0, r0, #23
 308 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 309              	.LVL21:
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 9


 310              		.loc 1 140 0
 311 0020 F3E7     		b	.L19
 312              	.L23:
 313 0022 C046     		.align	2
 314              	.L22:
 315 0024 00240140 		.word	1073816576
 316 0028 00100240 		.word	1073876992
 317 002c FFFDFFFF 		.word	-513
 318              		.cfi_endproc
 319              	.LFE39:
 321              		.comm	hadc,76,4
 322              		.text
 323              	.Letext0:
 324              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 325              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 326              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 327              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 328              		.file 6 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 329              		.file 7 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 330              		.file 8 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 331              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 332              		.file 10 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 333              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 334              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 335              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 336              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 337              		.file 15 "Core/Inc/adc.h"
 338              		.file 16 "Core/Inc/main.h"
 339              		.file 17 "<built-in>"
ARM GAS  E:\cygwin64\tmp\ccRX46HV.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
E:\cygwin64\tmp\ccRX46HV.s:16     .text.MX_ADC_Init:00000000 $t
E:\cygwin64\tmp\ccRX46HV.s:23     .text.MX_ADC_Init:00000000 MX_ADC_Init
E:\cygwin64\tmp\ccRX46HV.s:168    .text.MX_ADC_Init:000000ac $d
                            *COM*:0000004c hadc
E:\cygwin64\tmp\ccRX46HV.s:174    .text.HAL_ADC_MspInit:00000000 $t
E:\cygwin64\tmp\ccRX46HV.s:181    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
E:\cygwin64\tmp\ccRX46HV.s:260    .text.HAL_ADC_MspInit:00000058 $d
E:\cygwin64\tmp\ccRX46HV.s:266    .text.HAL_ADC_MspDeInit:00000000 $t
E:\cygwin64\tmp\ccRX46HV.s:273    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
E:\cygwin64\tmp\ccRX46HV.s:315    .text.HAL_ADC_MspDeInit:00000024 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit

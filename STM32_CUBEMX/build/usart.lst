ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART1_UART_Init:
  24              	.LFB37:
  25              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * File Name          : USART.c
   4:Core/Src/usart.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/usart.c ****   *                      of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART1 init function */
  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  33:Core/Src/usart.c **** {
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 2


  26              		.loc 1 33 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   huart1.Instance = USART1;
  35              		.loc 1 35 0
  36 0002 0C48     		ldr	r0, .L4
  37 0004 0C4B     		ldr	r3, .L4+4
  38 0006 0360     		str	r3, [r0]
  36:Core/Src/usart.c ****   huart1.Init.BaudRate = 38400;
  39              		.loc 1 36 0
  40 0008 9623     		movs	r3, #150
  41 000a 1B02     		lsls	r3, r3, #8
  42 000c 4360     		str	r3, [r0, #4]
  37:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  43              		.loc 1 37 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  38:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  46              		.loc 1 38 0
  47 0012 C360     		str	r3, [r0, #12]
  39:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  48              		.loc 1 39 0
  49 0014 0361     		str	r3, [r0, #16]
  40:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  50              		.loc 1 40 0
  51 0016 0C22     		movs	r2, #12
  52 0018 4261     		str	r2, [r0, #20]
  41:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  53              		.loc 1 41 0
  54 001a 8361     		str	r3, [r0, #24]
  42:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  55              		.loc 1 42 0
  56 001c C361     		str	r3, [r0, #28]
  43:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  57              		.loc 1 43 0
  58 001e 0362     		str	r3, [r0, #32]
  44:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  59              		.loc 1 44 0
  60 0020 4362     		str	r3, [r0, #36]
  45:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  61              		.loc 1 45 0
  62 0022 FFF7FEFF 		bl	HAL_UART_Init
  63              	.LVL0:
  64 0026 0028     		cmp	r0, #0
  65 0028 00D1     		bne	.L3
  66              	.L1:
  46:Core/Src/usart.c ****   {
  47:Core/Src/usart.c ****     Error_Handler();
  48:Core/Src/usart.c ****   }
  49:Core/Src/usart.c **** 
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 3


  50:Core/Src/usart.c **** }
  67              		.loc 1 50 0
  68              		@ sp needed
  69 002a 10BD     		pop	{r4, pc}
  70              	.L3:
  47:Core/Src/usart.c ****   }
  71              		.loc 1 47 0
  72 002c FFF7FEFF 		bl	Error_Handler
  73              	.LVL1:
  74              		.loc 1 50 0
  75 0030 FBE7     		b	.L1
  76              	.L5:
  77 0032 C046     		.align	2
  78              	.L4:
  79 0034 00000000 		.word	huart1
  80 0038 00380140 		.word	1073821696
  81              		.cfi_endproc
  82              	.LFE37:
  84              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  85              		.align	1
  86              		.global	MX_USART2_UART_Init
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	MX_USART2_UART_Init:
  93              	.LFB38:
  51:Core/Src/usart.c **** /* USART2 init function */
  52:Core/Src/usart.c **** 
  53:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  54:Core/Src/usart.c **** {
  94              		.loc 1 54 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 10B5     		push	{r4, lr}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c ****   huart2.Instance = USART2;
 103              		.loc 1 56 0
 104 0002 0C48     		ldr	r0, .L9
 105 0004 0C4B     		ldr	r3, .L9+4
 106 0006 0360     		str	r3, [r0]
  57:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
 107              		.loc 1 57 0
 108 0008 E123     		movs	r3, #225
 109 000a 5B02     		lsls	r3, r3, #9
 110 000c 4360     		str	r3, [r0, #4]
  58:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 111              		.loc 1 58 0
 112 000e 0023     		movs	r3, #0
 113 0010 8360     		str	r3, [r0, #8]
  59:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 114              		.loc 1 59 0
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 4


 115 0012 C360     		str	r3, [r0, #12]
  60:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 116              		.loc 1 60 0
 117 0014 0361     		str	r3, [r0, #16]
  61:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 118              		.loc 1 61 0
 119 0016 0C22     		movs	r2, #12
 120 0018 4261     		str	r2, [r0, #20]
  62:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 121              		.loc 1 62 0
 122 001a 8361     		str	r3, [r0, #24]
  63:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 123              		.loc 1 63 0
 124 001c C361     		str	r3, [r0, #28]
  64:Core/Src/usart.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 125              		.loc 1 64 0
 126 001e 0362     		str	r3, [r0, #32]
  65:Core/Src/usart.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 127              		.loc 1 65 0
 128 0020 4362     		str	r3, [r0, #36]
  66:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 129              		.loc 1 66 0
 130 0022 FFF7FEFF 		bl	HAL_UART_Init
 131              	.LVL2:
 132 0026 0028     		cmp	r0, #0
 133 0028 00D1     		bne	.L8
 134              	.L6:
  67:Core/Src/usart.c ****   {
  68:Core/Src/usart.c ****     Error_Handler();
  69:Core/Src/usart.c ****   }
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c **** }
 135              		.loc 1 71 0
 136              		@ sp needed
 137 002a 10BD     		pop	{r4, pc}
 138              	.L8:
  68:Core/Src/usart.c ****   }
 139              		.loc 1 68 0
 140 002c FFF7FEFF 		bl	Error_Handler
 141              	.LVL3:
 142              		.loc 1 71 0
 143 0030 FBE7     		b	.L6
 144              	.L10:
 145 0032 C046     		.align	2
 146              	.L9:
 147 0034 00000000 		.word	huart2
 148 0038 00440040 		.word	1073759232
 149              		.cfi_endproc
 150              	.LFE38:
 152              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 153              		.align	1
 154              		.global	HAL_UART_MspInit
 155              		.syntax unified
 156              		.code	16
 157              		.thumb_func
 158              		.fpu softvfp
 160              	HAL_UART_MspInit:
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 5


 161              	.LFB39:
  72:Core/Src/usart.c **** 
  73:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  74:Core/Src/usart.c **** {
 162              		.loc 1 74 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 40
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL4:
 167 0000 10B5     		push	{r4, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 172 0002 8AB0     		sub	sp, sp, #40
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 48
 175 0004 0400     		movs	r4, r0
  75:Core/Src/usart.c **** 
  76:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 176              		.loc 1 76 0
 177 0006 1422     		movs	r2, #20
 178 0008 0021     		movs	r1, #0
 179 000a 05A8     		add	r0, sp, #20
 180              	.LVL5:
 181 000c FFF7FEFF 		bl	memset
 182              	.LVL6:
  77:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 183              		.loc 1 77 0
 184 0010 2368     		ldr	r3, [r4]
 185 0012 264A     		ldr	r2, .L16
 186 0014 9342     		cmp	r3, r2
 187 0016 04D0     		beq	.L14
  78:Core/Src/usart.c ****   {
  79:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  80:Core/Src/usart.c **** 
  81:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  82:Core/Src/usart.c ****     /* USART1 clock enable */
  83:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  84:Core/Src/usart.c ****   
  85:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  86:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
  87:Core/Src/usart.c ****     PB6     ------> USART1_TX
  88:Core/Src/usart.c ****     PB7     ------> USART1_RX 
  89:Core/Src/usart.c ****     */
  90:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
  91:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  92:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  93:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  94:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
  95:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****     /* USART1 interrupt Init */
  98:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
  99:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 100:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 101:Core/Src/usart.c **** 
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 6


 102:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 103:Core/Src/usart.c ****   }
 104:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 188              		.loc 1 104 0
 189 0018 254A     		ldr	r2, .L16+4
 190 001a 9342     		cmp	r3, r2
 191 001c 27D0     		beq	.L15
 192              	.L11:
 105:Core/Src/usart.c ****   {
 106:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 107:Core/Src/usart.c **** 
 108:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
 109:Core/Src/usart.c ****     /* USART2 clock enable */
 110:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 111:Core/Src/usart.c ****   
 112:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 113:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 114:Core/Src/usart.c ****     PA2     ------> USART2_TX
 115:Core/Src/usart.c ****     PA3     ------> USART2_RX 
 116:Core/Src/usart.c ****     */
 117:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 118:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 119:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 120:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 121:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 122:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123:Core/Src/usart.c **** 
 124:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 125:Core/Src/usart.c **** 
 126:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 127:Core/Src/usart.c ****   }
 128:Core/Src/usart.c **** }
 193              		.loc 1 128 0
 194 001e 0AB0     		add	sp, sp, #40
 195              		@ sp needed
 196              	.LVL7:
 197 0020 10BD     		pop	{r4, pc}
 198              	.LVL8:
 199              	.L14:
 200              	.LBB2:
  83:Core/Src/usart.c ****   
 201              		.loc 1 83 0
 202 0022 244B     		ldr	r3, .L16+8
 203 0024 9969     		ldr	r1, [r3, #24]
 204 0026 8020     		movs	r0, #128
 205 0028 C001     		lsls	r0, r0, #7
 206 002a 0143     		orrs	r1, r0
 207 002c 9961     		str	r1, [r3, #24]
 208 002e 9A69     		ldr	r2, [r3, #24]
 209 0030 0240     		ands	r2, r0
 210 0032 0192     		str	r2, [sp, #4]
 211 0034 019A     		ldr	r2, [sp, #4]
 212              	.LBE2:
 213              	.LBB3:
  85:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
 214              		.loc 1 85 0
 215 0036 5A69     		ldr	r2, [r3, #20]
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 7


 216 0038 8021     		movs	r1, #128
 217 003a C902     		lsls	r1, r1, #11
 218 003c 0A43     		orrs	r2, r1
 219 003e 5A61     		str	r2, [r3, #20]
 220 0040 5B69     		ldr	r3, [r3, #20]
 221 0042 0B40     		ands	r3, r1
 222 0044 0293     		str	r3, [sp, #8]
 223 0046 029B     		ldr	r3, [sp, #8]
 224              	.LBE3:
  90:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 225              		.loc 1 90 0
 226 0048 C023     		movs	r3, #192
 227 004a 0593     		str	r3, [sp, #20]
  91:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 228              		.loc 1 91 0
 229 004c BE3B     		subs	r3, r3, #190
 230 004e 0693     		str	r3, [sp, #24]
  93:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 231              		.loc 1 93 0
 232 0050 0133     		adds	r3, r3, #1
 233 0052 0893     		str	r3, [sp, #32]
  95:Core/Src/usart.c **** 
 234              		.loc 1 95 0
 235 0054 05A9     		add	r1, sp, #20
 236 0056 1848     		ldr	r0, .L16+12
 237 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 238              	.LVL9:
  98:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 239              		.loc 1 98 0
 240 005c 0022     		movs	r2, #0
 241 005e 0021     		movs	r1, #0
 242 0060 1B20     		movs	r0, #27
 243 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 244              	.LVL10:
  99:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 245              		.loc 1 99 0
 246 0066 1B20     		movs	r0, #27
 247 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 248              	.LVL11:
 249 006c D7E7     		b	.L11
 250              	.L15:
 251              	.LBB4:
 110:Core/Src/usart.c ****   
 252              		.loc 1 110 0
 253 006e 114B     		ldr	r3, .L16+8
 254 0070 D969     		ldr	r1, [r3, #28]
 255 0072 8022     		movs	r2, #128
 256 0074 9202     		lsls	r2, r2, #10
 257 0076 1143     		orrs	r1, r2
 258 0078 D961     		str	r1, [r3, #28]
 259 007a D969     		ldr	r1, [r3, #28]
 260 007c 1140     		ands	r1, r2
 261 007e 0391     		str	r1, [sp, #12]
 262 0080 0399     		ldr	r1, [sp, #12]
 263              	.LBE4:
 264              	.LBB5:
 112:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 8


 265              		.loc 1 112 0
 266 0082 5969     		ldr	r1, [r3, #20]
 267 0084 1143     		orrs	r1, r2
 268 0086 5961     		str	r1, [r3, #20]
 269 0088 5B69     		ldr	r3, [r3, #20]
 270 008a 1A40     		ands	r2, r3
 271 008c 0492     		str	r2, [sp, #16]
 272 008e 049B     		ldr	r3, [sp, #16]
 273              	.LBE5:
 117:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 274              		.loc 1 117 0
 275 0090 0C23     		movs	r3, #12
 276 0092 0593     		str	r3, [sp, #20]
 118:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 277              		.loc 1 118 0
 278 0094 0A3B     		subs	r3, r3, #10
 279 0096 0693     		str	r3, [sp, #24]
 120:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 280              		.loc 1 120 0
 281 0098 0133     		adds	r3, r3, #1
 282 009a 0893     		str	r3, [sp, #32]
 121:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 283              		.loc 1 121 0
 284 009c 023B     		subs	r3, r3, #2
 285 009e 0993     		str	r3, [sp, #36]
 122:Core/Src/usart.c **** 
 286              		.loc 1 122 0
 287 00a0 9020     		movs	r0, #144
 288 00a2 05A9     		add	r1, sp, #20
 289 00a4 C005     		lsls	r0, r0, #23
 290 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 291              	.LVL12:
 292              		.loc 1 128 0
 293 00aa B8E7     		b	.L11
 294              	.L17:
 295              		.align	2
 296              	.L16:
 297 00ac 00380140 		.word	1073821696
 298 00b0 00440040 		.word	1073759232
 299 00b4 00100240 		.word	1073876992
 300 00b8 00040048 		.word	1207960576
 301              		.cfi_endproc
 302              	.LFE39:
 304              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 305              		.align	1
 306              		.global	HAL_UART_MspDeInit
 307              		.syntax unified
 308              		.code	16
 309              		.thumb_func
 310              		.fpu softvfp
 312              	HAL_UART_MspDeInit:
 313              	.LFB40:
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 131:Core/Src/usart.c **** {
 314              		.loc 1 131 0
 315              		.cfi_startproc
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 9


 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL13:
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI4:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 132:Core/Src/usart.c **** 
 133:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 324              		.loc 1 133 0
 325 0002 0368     		ldr	r3, [r0]
 326 0004 0F4A     		ldr	r2, .L23
 327 0006 9342     		cmp	r3, r2
 328 0008 03D0     		beq	.L21
 134:Core/Src/usart.c ****   {
 135:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 136:Core/Src/usart.c **** 
 137:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 138:Core/Src/usart.c ****     /* Peripheral clock disable */
 139:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 140:Core/Src/usart.c ****   
 141:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
 142:Core/Src/usart.c ****     PB6     ------> USART1_TX
 143:Core/Src/usart.c ****     PB7     ------> USART1_RX 
 144:Core/Src/usart.c ****     */
 145:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 146:Core/Src/usart.c **** 
 147:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 148:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 149:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 152:Core/Src/usart.c ****   }
 153:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 329              		.loc 1 153 0
 330 000a 0F4A     		ldr	r2, .L23+4
 331 000c 9342     		cmp	r3, r2
 332 000e 0DD0     		beq	.L22
 333              	.LVL14:
 334              	.L18:
 154:Core/Src/usart.c ****   {
 155:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 156:Core/Src/usart.c **** 
 157:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 158:Core/Src/usart.c ****     /* Peripheral clock disable */
 159:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 160:Core/Src/usart.c ****   
 161:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 162:Core/Src/usart.c ****     PA2     ------> USART2_TX
 163:Core/Src/usart.c ****     PA3     ------> USART2_RX 
 164:Core/Src/usart.c ****     */
 165:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 166:Core/Src/usart.c **** 
 167:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 168:Core/Src/usart.c **** 
 169:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 10


 170:Core/Src/usart.c ****   }
 171:Core/Src/usart.c **** } 
 335              		.loc 1 171 0
 336              		@ sp needed
 337 0010 10BD     		pop	{r4, pc}
 338              	.LVL15:
 339              	.L21:
 139:Core/Src/usart.c ****   
 340              		.loc 1 139 0
 341 0012 0E4A     		ldr	r2, .L23+8
 342 0014 9369     		ldr	r3, [r2, #24]
 343 0016 0E49     		ldr	r1, .L23+12
 344 0018 0B40     		ands	r3, r1
 345 001a 9361     		str	r3, [r2, #24]
 145:Core/Src/usart.c **** 
 346              		.loc 1 145 0
 347 001c C021     		movs	r1, #192
 348 001e 0D48     		ldr	r0, .L23+16
 349              	.LVL16:
 350 0020 FFF7FEFF 		bl	HAL_GPIO_DeInit
 351              	.LVL17:
 148:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 352              		.loc 1 148 0
 353 0024 1B20     		movs	r0, #27
 354 0026 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 355              	.LVL18:
 356 002a F1E7     		b	.L18
 357              	.LVL19:
 358              	.L22:
 159:Core/Src/usart.c ****   
 359              		.loc 1 159 0
 360 002c 074A     		ldr	r2, .L23+8
 361 002e D369     		ldr	r3, [r2, #28]
 362 0030 0949     		ldr	r1, .L23+20
 363 0032 0B40     		ands	r3, r1
 364 0034 D361     		str	r3, [r2, #28]
 165:Core/Src/usart.c **** 
 365              		.loc 1 165 0
 366 0036 9020     		movs	r0, #144
 367              	.LVL20:
 368 0038 0C21     		movs	r1, #12
 369 003a C005     		lsls	r0, r0, #23
 370 003c FFF7FEFF 		bl	HAL_GPIO_DeInit
 371              	.LVL21:
 372              		.loc 1 171 0
 373 0040 E6E7     		b	.L18
 374              	.L24:
 375 0042 C046     		.align	2
 376              	.L23:
 377 0044 00380140 		.word	1073821696
 378 0048 00440040 		.word	1073759232
 379 004c 00100240 		.word	1073876992
 380 0050 FFBFFFFF 		.word	-16385
 381 0054 00040048 		.word	1207960576
 382 0058 FFFFFDFF 		.word	-131073
 383              		.cfi_endproc
 384              	.LFE40:
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 11


 386              		.comm	huart2,112,4
 387              		.comm	huart1,112,4
 388              		.text
 389              	.Letext0:
 390              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 391              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 392              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 393              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 394              		.file 6 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 395              		.file 7 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 396              		.file 8 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 397              		.file 9 "d:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 398              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 399              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 400              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 401              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 402              		.file 14 "Core/Inc/usart.h"
 403              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 404              		.file 16 "Core/Inc/main.h"
 405              		.file 17 "<built-in>"
ARM GAS  E:\cygwin64\tmp\ccjQkZve.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
E:\cygwin64\tmp\ccjQkZve.s:16     .text.MX_USART1_UART_Init:00000000 $t
E:\cygwin64\tmp\ccjQkZve.s:23     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
E:\cygwin64\tmp\ccjQkZve.s:79     .text.MX_USART1_UART_Init:00000034 $d
                            *COM*:00000070 huart1
E:\cygwin64\tmp\ccjQkZve.s:85     .text.MX_USART2_UART_Init:00000000 $t
E:\cygwin64\tmp\ccjQkZve.s:92     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
E:\cygwin64\tmp\ccjQkZve.s:147    .text.MX_USART2_UART_Init:00000034 $d
                            *COM*:00000070 huart2
E:\cygwin64\tmp\ccjQkZve.s:153    .text.HAL_UART_MspInit:00000000 $t
E:\cygwin64\tmp\ccjQkZve.s:160    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
E:\cygwin64\tmp\ccjQkZve.s:297    .text.HAL_UART_MspInit:000000ac $d
E:\cygwin64\tmp\ccjQkZve.s:305    .text.HAL_UART_MspDeInit:00000000 $t
E:\cygwin64\tmp\ccjQkZve.s:312    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
E:\cygwin64\tmp\ccjQkZve.s:377    .text.HAL_UART_MspDeInit:00000044 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
